// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cardano.proto

package messages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CardanoNetwork int32

const (
	CardanoNetwork_CardanoMainnet CardanoNetwork = 0
	CardanoNetwork_CardanoTestnet CardanoNetwork = 1
)

var CardanoNetwork_name = map[int32]string{
	0: "CardanoMainnet",
	1: "CardanoTestnet",
}

var CardanoNetwork_value = map[string]int32{
	"CardanoMainnet": 0,
	"CardanoTestnet": 1,
}

func (x CardanoNetwork) String() string {
	return proto.EnumName(CardanoNetwork_name, int32(x))
}

func (CardanoNetwork) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{0}
}

type CardanoXpubsRequest struct {
	Keypaths             []*Keypath `protobuf:"bytes,1,rep,name=keypaths,proto3" json:"keypaths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CardanoXpubsRequest) Reset()         { *m = CardanoXpubsRequest{} }
func (m *CardanoXpubsRequest) String() string { return proto.CompactTextString(m) }
func (*CardanoXpubsRequest) ProtoMessage()    {}
func (*CardanoXpubsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{0}
}

func (m *CardanoXpubsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoXpubsRequest.Unmarshal(m, b)
}
func (m *CardanoXpubsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoXpubsRequest.Marshal(b, m, deterministic)
}
func (m *CardanoXpubsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoXpubsRequest.Merge(m, src)
}
func (m *CardanoXpubsRequest) XXX_Size() int {
	return xxx_messageInfo_CardanoXpubsRequest.Size(m)
}
func (m *CardanoXpubsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoXpubsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoXpubsRequest proto.InternalMessageInfo

func (m *CardanoXpubsRequest) GetKeypaths() []*Keypath {
	if m != nil {
		return m.Keypaths
	}
	return nil
}

type CardanoXpubsResponse struct {
	Xpubs                [][]byte `protobuf:"bytes,1,rep,name=xpubs,proto3" json:"xpubs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoXpubsResponse) Reset()         { *m = CardanoXpubsResponse{} }
func (m *CardanoXpubsResponse) String() string { return proto.CompactTextString(m) }
func (*CardanoXpubsResponse) ProtoMessage()    {}
func (*CardanoXpubsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{1}
}

func (m *CardanoXpubsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoXpubsResponse.Unmarshal(m, b)
}
func (m *CardanoXpubsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoXpubsResponse.Marshal(b, m, deterministic)
}
func (m *CardanoXpubsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoXpubsResponse.Merge(m, src)
}
func (m *CardanoXpubsResponse) XXX_Size() int {
	return xxx_messageInfo_CardanoXpubsResponse.Size(m)
}
func (m *CardanoXpubsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoXpubsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoXpubsResponse proto.InternalMessageInfo

func (m *CardanoXpubsResponse) GetXpubs() [][]byte {
	if m != nil {
		return m.Xpubs
	}
	return nil
}

type CardanoScriptConfig struct {
	// Entries correspond to address types as described in:
	// https://github.com/cardano-foundation/CIPs/blob/6c249ef48f8f5b32efc0ec768fadf4321f3173f2/CIP-0019/CIP-0019.md
	// See also:
	// https://github.com/input-output-hk/cardano-ledger-specs/blob/d0aa86ded0b973b09b629e5aa62aa1e71364d088/eras/alonzo/test-suite/cddl-files/alonzo.cddl#L137
	//
	// Types that are valid to be assigned to Config:
	//	*CardanoScriptConfig_PkhSkh_
	Config               isCardanoScriptConfig_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CardanoScriptConfig) Reset()         { *m = CardanoScriptConfig{} }
func (m *CardanoScriptConfig) String() string { return proto.CompactTextString(m) }
func (*CardanoScriptConfig) ProtoMessage()    {}
func (*CardanoScriptConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{2}
}

func (m *CardanoScriptConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoScriptConfig.Unmarshal(m, b)
}
func (m *CardanoScriptConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoScriptConfig.Marshal(b, m, deterministic)
}
func (m *CardanoScriptConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoScriptConfig.Merge(m, src)
}
func (m *CardanoScriptConfig) XXX_Size() int {
	return xxx_messageInfo_CardanoScriptConfig.Size(m)
}
func (m *CardanoScriptConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoScriptConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoScriptConfig proto.InternalMessageInfo

type isCardanoScriptConfig_Config interface {
	isCardanoScriptConfig_Config()
}

type CardanoScriptConfig_PkhSkh_ struct {
	PkhSkh *CardanoScriptConfig_PkhSkh `protobuf:"bytes,1,opt,name=pkh_skh,json=pkhSkh,proto3,oneof"`
}

func (*CardanoScriptConfig_PkhSkh_) isCardanoScriptConfig_Config() {}

func (m *CardanoScriptConfig) GetConfig() isCardanoScriptConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CardanoScriptConfig) GetPkhSkh() *CardanoScriptConfig_PkhSkh {
	if x, ok := m.GetConfig().(*CardanoScriptConfig_PkhSkh_); ok {
		return x.PkhSkh
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CardanoScriptConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CardanoScriptConfig_PkhSkh_)(nil),
	}
}

type CardanoScriptConfig_PkhSkh struct {
	KeypathPayment       []uint32 `protobuf:"varint,1,rep,packed,name=keypath_payment,json=keypathPayment,proto3" json:"keypath_payment,omitempty"`
	KeypathStake         []uint32 `protobuf:"varint,2,rep,packed,name=keypath_stake,json=keypathStake,proto3" json:"keypath_stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoScriptConfig_PkhSkh) Reset()         { *m = CardanoScriptConfig_PkhSkh{} }
func (m *CardanoScriptConfig_PkhSkh) String() string { return proto.CompactTextString(m) }
func (*CardanoScriptConfig_PkhSkh) ProtoMessage()    {}
func (*CardanoScriptConfig_PkhSkh) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{2, 0}
}

func (m *CardanoScriptConfig_PkhSkh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoScriptConfig_PkhSkh.Unmarshal(m, b)
}
func (m *CardanoScriptConfig_PkhSkh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoScriptConfig_PkhSkh.Marshal(b, m, deterministic)
}
func (m *CardanoScriptConfig_PkhSkh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoScriptConfig_PkhSkh.Merge(m, src)
}
func (m *CardanoScriptConfig_PkhSkh) XXX_Size() int {
	return xxx_messageInfo_CardanoScriptConfig_PkhSkh.Size(m)
}
func (m *CardanoScriptConfig_PkhSkh) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoScriptConfig_PkhSkh.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoScriptConfig_PkhSkh proto.InternalMessageInfo

func (m *CardanoScriptConfig_PkhSkh) GetKeypathPayment() []uint32 {
	if m != nil {
		return m.KeypathPayment
	}
	return nil
}

func (m *CardanoScriptConfig_PkhSkh) GetKeypathStake() []uint32 {
	if m != nil {
		return m.KeypathStake
	}
	return nil
}

type CardanoAddressRequest struct {
	Network              CardanoNetwork       `protobuf:"varint,1,opt,name=network,proto3,enum=shiftcrypto.bitbox02.CardanoNetwork" json:"network,omitempty"`
	Display              bool                 `protobuf:"varint,2,opt,name=display,proto3" json:"display,omitempty"`
	ScriptConfig         *CardanoScriptConfig `protobuf:"bytes,3,opt,name=script_config,json=scriptConfig,proto3" json:"script_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CardanoAddressRequest) Reset()         { *m = CardanoAddressRequest{} }
func (m *CardanoAddressRequest) String() string { return proto.CompactTextString(m) }
func (*CardanoAddressRequest) ProtoMessage()    {}
func (*CardanoAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{3}
}

func (m *CardanoAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoAddressRequest.Unmarshal(m, b)
}
func (m *CardanoAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoAddressRequest.Marshal(b, m, deterministic)
}
func (m *CardanoAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoAddressRequest.Merge(m, src)
}
func (m *CardanoAddressRequest) XXX_Size() int {
	return xxx_messageInfo_CardanoAddressRequest.Size(m)
}
func (m *CardanoAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoAddressRequest proto.InternalMessageInfo

func (m *CardanoAddressRequest) GetNetwork() CardanoNetwork {
	if m != nil {
		return m.Network
	}
	return CardanoNetwork_CardanoMainnet
}

func (m *CardanoAddressRequest) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

func (m *CardanoAddressRequest) GetScriptConfig() *CardanoScriptConfig {
	if m != nil {
		return m.ScriptConfig
	}
	return nil
}

// Max allowed transaction size is 16384 bytes according to
// https://github.com/cardano-foundation/CIPs/blob/master/CIP-0009/CIP-0009.md. Unlike with BTC, we
// can fit the whole request in RAM and don't need to stream.
//
// See also: https://github.com/input-output-hk/cardano-ledger-specs/blob/d0aa86ded0b973b09b629e5aa62aa1e71364d088/eras/alonzo/test-suite/cddl-files/alonzo.cddl#L50
type CardanoSignTransactionRequest struct {
	Network               CardanoNetwork                               `protobuf:"varint,1,opt,name=network,proto3,enum=shiftcrypto.bitbox02.CardanoNetwork" json:"network,omitempty"`
	Inputs                []*CardanoSignTransactionRequest_Input       `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs               []*CardanoSignTransactionRequest_Output      `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Fee                   uint64                                       `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Ttl                   uint64                                       `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Certificates          []*CardanoSignTransactionRequest_Certificate `protobuf:"bytes,6,rep,name=certificates,proto3" json:"certificates,omitempty"`
	Withdrawals           []*CardanoSignTransactionRequest_Withdrawal  `protobuf:"bytes,7,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
	ValidityIntervalStart uint64                                       `protobuf:"varint,8,opt,name=validity_interval_start,json=validityIntervalStart,proto3" json:"validity_interval_start,omitempty"`
	AllowZeroTtl          bool                                         `protobuf:"varint,9,opt,name=allow_zero_ttl,json=allowZeroTtl,proto3" json:"allow_zero_ttl,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                     `json:"-"`
	XXX_unrecognized      []byte                                       `json:"-"`
	XXX_sizecache         int32                                        `json:"-"`
}

func (m *CardanoSignTransactionRequest) Reset()         { *m = CardanoSignTransactionRequest{} }
func (m *CardanoSignTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest) ProtoMessage()    {}
func (*CardanoSignTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4}
}

func (m *CardanoSignTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest.Merge(m, src)
}
func (m *CardanoSignTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest.Size(m)
}
func (m *CardanoSignTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest) GetNetwork() CardanoNetwork {
	if m != nil {
		return m.Network
	}
	return CardanoNetwork_CardanoMainnet
}

func (m *CardanoSignTransactionRequest) GetInputs() []*CardanoSignTransactionRequest_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *CardanoSignTransactionRequest) GetOutputs() []*CardanoSignTransactionRequest_Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *CardanoSignTransactionRequest) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *CardanoSignTransactionRequest) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *CardanoSignTransactionRequest) GetCertificates() []*CardanoSignTransactionRequest_Certificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

func (m *CardanoSignTransactionRequest) GetWithdrawals() []*CardanoSignTransactionRequest_Withdrawal {
	if m != nil {
		return m.Withdrawals
	}
	return nil
}

func (m *CardanoSignTransactionRequest) GetValidityIntervalStart() uint64 {
	if m != nil {
		return m.ValidityIntervalStart
	}
	return 0
}

func (m *CardanoSignTransactionRequest) GetAllowZeroTtl() bool {
	if m != nil {
		return m.AllowZeroTtl
	}
	return false
}

type CardanoSignTransactionRequest_Input struct {
	Keypath              []uint32 `protobuf:"varint,1,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	PrevOutHash          []byte   `protobuf:"bytes,2,opt,name=prev_out_hash,json=prevOutHash,proto3" json:"prev_out_hash,omitempty"`
	PrevOutIndex         uint32   `protobuf:"varint,3,opt,name=prev_out_index,json=prevOutIndex,proto3" json:"prev_out_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoSignTransactionRequest_Input) Reset()         { *m = CardanoSignTransactionRequest_Input{} }
func (m *CardanoSignTransactionRequest_Input) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest_Input) ProtoMessage()    {}
func (*CardanoSignTransactionRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 0}
}

func (m *CardanoSignTransactionRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_Input.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_Input.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_Input.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_Input) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_Input.Size(m)
}
func (m *CardanoSignTransactionRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_Input proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_Input) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Input) GetPrevOutHash() []byte {
	if m != nil {
		return m.PrevOutHash
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Input) GetPrevOutIndex() uint32 {
	if m != nil {
		return m.PrevOutIndex
	}
	return 0
}

// https://github.com/input-output-hk/cardano-ledger/blob/d0aa86ded0b973b09b629e5aa62aa1e71364d088/eras/alonzo/test-suite/cddl-files/alonzo.cddl#L358
type CardanoSignTransactionRequest_AssetGroup struct {
	PolicyId             []byte                                            `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Tokens               []*CardanoSignTransactionRequest_AssetGroup_Token `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CardanoSignTransactionRequest_AssetGroup) Reset() {
	*m = CardanoSignTransactionRequest_AssetGroup{}
}
func (m *CardanoSignTransactionRequest_AssetGroup) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest_AssetGroup) ProtoMessage()    {}
func (*CardanoSignTransactionRequest_AssetGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 1}
}

func (m *CardanoSignTransactionRequest_AssetGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_AssetGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_AssetGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_AssetGroup) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup.Size(m)
}
func (m *CardanoSignTransactionRequest_AssetGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_AssetGroup) GetPolicyId() []byte {
	if m != nil {
		return m.PolicyId
	}
	return nil
}

func (m *CardanoSignTransactionRequest_AssetGroup) GetTokens() []*CardanoSignTransactionRequest_AssetGroup_Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type CardanoSignTransactionRequest_AssetGroup_Token struct {
	AssetName []byte `protobuf:"bytes,1,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	// Number of tokens transacted of this asset.
	Value                uint64   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoSignTransactionRequest_AssetGroup_Token) Reset() {
	*m = CardanoSignTransactionRequest_AssetGroup_Token{}
}
func (m *CardanoSignTransactionRequest_AssetGroup_Token) String() string {
	return proto.CompactTextString(m)
}
func (*CardanoSignTransactionRequest_AssetGroup_Token) ProtoMessage() {}
func (*CardanoSignTransactionRequest_AssetGroup_Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 1, 0}
}

func (m *CardanoSignTransactionRequest_AssetGroup_Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_AssetGroup_Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_AssetGroup_Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_AssetGroup_Token) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token.Size(m)
}
func (m *CardanoSignTransactionRequest_AssetGroup_Token) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_AssetGroup_Token proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_AssetGroup_Token) GetAssetName() []byte {
	if m != nil {
		return m.AssetName
	}
	return nil
}

func (m *CardanoSignTransactionRequest_AssetGroup_Token) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type CardanoSignTransactionRequest_Output struct {
	EncodedAddress string `protobuf:"bytes,1,opt,name=encoded_address,json=encodedAddress,proto3" json:"encoded_address,omitempty"`
	Value          uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// Optional. If provided, this is validated as a change output.
	ScriptConfig         *CardanoScriptConfig                        `protobuf:"bytes,3,opt,name=script_config,json=scriptConfig,proto3" json:"script_config,omitempty"`
	AssetGroups          []*CardanoSignTransactionRequest_AssetGroup `protobuf:"bytes,4,rep,name=asset_groups,json=assetGroups,proto3" json:"asset_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CardanoSignTransactionRequest_Output) Reset()         { *m = CardanoSignTransactionRequest_Output{} }
func (m *CardanoSignTransactionRequest_Output) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest_Output) ProtoMessage()    {}
func (*CardanoSignTransactionRequest_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 2}
}

func (m *CardanoSignTransactionRequest_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_Output.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_Output.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_Output.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_Output) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_Output.Size(m)
}
func (m *CardanoSignTransactionRequest_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_Output.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_Output proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_Output) GetEncodedAddress() string {
	if m != nil {
		return m.EncodedAddress
	}
	return ""
}

func (m *CardanoSignTransactionRequest_Output) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CardanoSignTransactionRequest_Output) GetScriptConfig() *CardanoScriptConfig {
	if m != nil {
		return m.ScriptConfig
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Output) GetAssetGroups() []*CardanoSignTransactionRequest_AssetGroup {
	if m != nil {
		return m.AssetGroups
	}
	return nil
}

// See https://github.com/input-output-hk/cardano-ledger-specs/blob/d0aa86ded0b973b09b629e5aa62aa1e71364d088/eras/alonzo/test-suite/cddl-files/alonzo.cddl#L150
type CardanoSignTransactionRequest_Certificate struct {
	// Types that are valid to be assigned to Cert:
	//	*CardanoSignTransactionRequest_Certificate_StakeRegistration
	//	*CardanoSignTransactionRequest_Certificate_StakeDeregistration
	//	*CardanoSignTransactionRequest_Certificate_StakeDelegation_
	Cert                 isCardanoSignTransactionRequest_Certificate_Cert `protobuf_oneof:"cert"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CardanoSignTransactionRequest_Certificate) Reset() {
	*m = CardanoSignTransactionRequest_Certificate{}
}
func (m *CardanoSignTransactionRequest_Certificate) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest_Certificate) ProtoMessage()    {}
func (*CardanoSignTransactionRequest_Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 3}
}

func (m *CardanoSignTransactionRequest_Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_Certificate.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_Certificate) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate.Size(m)
}
func (m *CardanoSignTransactionRequest_Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_Certificate proto.InternalMessageInfo

type isCardanoSignTransactionRequest_Certificate_Cert interface {
	isCardanoSignTransactionRequest_Certificate_Cert()
}

type CardanoSignTransactionRequest_Certificate_StakeRegistration struct {
	StakeRegistration *Keypath `protobuf:"bytes,1,opt,name=stake_registration,json=stakeRegistration,proto3,oneof"`
}

type CardanoSignTransactionRequest_Certificate_StakeDeregistration struct {
	StakeDeregistration *Keypath `protobuf:"bytes,2,opt,name=stake_deregistration,json=stakeDeregistration,proto3,oneof"`
}

type CardanoSignTransactionRequest_Certificate_StakeDelegation_ struct {
	StakeDelegation *CardanoSignTransactionRequest_Certificate_StakeDelegation `protobuf:"bytes,3,opt,name=stake_delegation,json=stakeDelegation,proto3,oneof"`
}

func (*CardanoSignTransactionRequest_Certificate_StakeRegistration) isCardanoSignTransactionRequest_Certificate_Cert() {
}

func (*CardanoSignTransactionRequest_Certificate_StakeDeregistration) isCardanoSignTransactionRequest_Certificate_Cert() {
}

func (*CardanoSignTransactionRequest_Certificate_StakeDelegation_) isCardanoSignTransactionRequest_Certificate_Cert() {
}

func (m *CardanoSignTransactionRequest_Certificate) GetCert() isCardanoSignTransactionRequest_Certificate_Cert {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Certificate) GetStakeRegistration() *Keypath {
	if x, ok := m.GetCert().(*CardanoSignTransactionRequest_Certificate_StakeRegistration); ok {
		return x.StakeRegistration
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Certificate) GetStakeDeregistration() *Keypath {
	if x, ok := m.GetCert().(*CardanoSignTransactionRequest_Certificate_StakeDeregistration); ok {
		return x.StakeDeregistration
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Certificate) GetStakeDelegation() *CardanoSignTransactionRequest_Certificate_StakeDelegation {
	if x, ok := m.GetCert().(*CardanoSignTransactionRequest_Certificate_StakeDelegation_); ok {
		return x.StakeDelegation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CardanoSignTransactionRequest_Certificate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CardanoSignTransactionRequest_Certificate_StakeRegistration)(nil),
		(*CardanoSignTransactionRequest_Certificate_StakeDeregistration)(nil),
		(*CardanoSignTransactionRequest_Certificate_StakeDelegation_)(nil),
	}
}

type CardanoSignTransactionRequest_Certificate_StakeDelegation struct {
	Keypath              []uint32 `protobuf:"varint,1,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	PoolKeyhash          []byte   `protobuf:"bytes,2,opt,name=pool_keyhash,json=poolKeyhash,proto3" json:"pool_keyhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) Reset() {
	*m = CardanoSignTransactionRequest_Certificate_StakeDelegation{}
}
func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) String() string {
	return proto.CompactTextString(m)
}
func (*CardanoSignTransactionRequest_Certificate_StakeDelegation) ProtoMessage() {}
func (*CardanoSignTransactionRequest_Certificate_StakeDelegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 3, 0}
}

func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation.Size(m)
}
func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_Certificate_StakeDelegation proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Certificate_StakeDelegation) GetPoolKeyhash() []byte {
	if m != nil {
		return m.PoolKeyhash
	}
	return nil
}

type CardanoSignTransactionRequest_Withdrawal struct {
	Keypath              []uint32 `protobuf:"varint,1,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Value                uint64   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoSignTransactionRequest_Withdrawal) Reset() {
	*m = CardanoSignTransactionRequest_Withdrawal{}
}
func (m *CardanoSignTransactionRequest_Withdrawal) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionRequest_Withdrawal) ProtoMessage()    {}
func (*CardanoSignTransactionRequest_Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{4, 4}
}

func (m *CardanoSignTransactionRequest_Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal.Unmarshal(m, b)
}
func (m *CardanoSignTransactionRequest_Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionRequest_Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal.Merge(m, src)
}
func (m *CardanoSignTransactionRequest_Withdrawal) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal.Size(m)
}
func (m *CardanoSignTransactionRequest_Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionRequest_Withdrawal proto.InternalMessageInfo

func (m *CardanoSignTransactionRequest_Withdrawal) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *CardanoSignTransactionRequest_Withdrawal) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type CardanoSignTransactionResponse struct {
	ShelleyWitnesses     []*CardanoSignTransactionResponse_ShelleyWitness `protobuf:"bytes,1,rep,name=shelley_witnesses,json=shelleyWitnesses,proto3" json:"shelley_witnesses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CardanoSignTransactionResponse) Reset()         { *m = CardanoSignTransactionResponse{} }
func (m *CardanoSignTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CardanoSignTransactionResponse) ProtoMessage()    {}
func (*CardanoSignTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{5}
}

func (m *CardanoSignTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionResponse.Unmarshal(m, b)
}
func (m *CardanoSignTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionResponse.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionResponse.Merge(m, src)
}
func (m *CardanoSignTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionResponse.Size(m)
}
func (m *CardanoSignTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionResponse proto.InternalMessageInfo

func (m *CardanoSignTransactionResponse) GetShelleyWitnesses() []*CardanoSignTransactionResponse_ShelleyWitness {
	if m != nil {
		return m.ShelleyWitnesses
	}
	return nil
}

type CardanoSignTransactionResponse_ShelleyWitness struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardanoSignTransactionResponse_ShelleyWitness) Reset() {
	*m = CardanoSignTransactionResponse_ShelleyWitness{}
}
func (m *CardanoSignTransactionResponse_ShelleyWitness) String() string {
	return proto.CompactTextString(m)
}
func (*CardanoSignTransactionResponse_ShelleyWitness) ProtoMessage() {}
func (*CardanoSignTransactionResponse_ShelleyWitness) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{5, 0}
}

func (m *CardanoSignTransactionResponse_ShelleyWitness) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness.Unmarshal(m, b)
}
func (m *CardanoSignTransactionResponse_ShelleyWitness) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness.Marshal(b, m, deterministic)
}
func (m *CardanoSignTransactionResponse_ShelleyWitness) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness.Merge(m, src)
}
func (m *CardanoSignTransactionResponse_ShelleyWitness) XXX_Size() int {
	return xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness.Size(m)
}
func (m *CardanoSignTransactionResponse_ShelleyWitness) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoSignTransactionResponse_ShelleyWitness proto.InternalMessageInfo

func (m *CardanoSignTransactionResponse_ShelleyWitness) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CardanoSignTransactionResponse_ShelleyWitness) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CardanoRequest struct {
	// Types that are valid to be assigned to Request:
	//	*CardanoRequest_Xpubs
	//	*CardanoRequest_Address
	//	*CardanoRequest_SignTransaction
	Request              isCardanoRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CardanoRequest) Reset()         { *m = CardanoRequest{} }
func (m *CardanoRequest) String() string { return proto.CompactTextString(m) }
func (*CardanoRequest) ProtoMessage()    {}
func (*CardanoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{6}
}

func (m *CardanoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoRequest.Unmarshal(m, b)
}
func (m *CardanoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoRequest.Marshal(b, m, deterministic)
}
func (m *CardanoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoRequest.Merge(m, src)
}
func (m *CardanoRequest) XXX_Size() int {
	return xxx_messageInfo_CardanoRequest.Size(m)
}
func (m *CardanoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoRequest proto.InternalMessageInfo

type isCardanoRequest_Request interface {
	isCardanoRequest_Request()
}

type CardanoRequest_Xpubs struct {
	Xpubs *CardanoXpubsRequest `protobuf:"bytes,1,opt,name=xpubs,proto3,oneof"`
}

type CardanoRequest_Address struct {
	Address *CardanoAddressRequest `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type CardanoRequest_SignTransaction struct {
	SignTransaction *CardanoSignTransactionRequest `protobuf:"bytes,3,opt,name=sign_transaction,json=signTransaction,proto3,oneof"`
}

func (*CardanoRequest_Xpubs) isCardanoRequest_Request() {}

func (*CardanoRequest_Address) isCardanoRequest_Request() {}

func (*CardanoRequest_SignTransaction) isCardanoRequest_Request() {}

func (m *CardanoRequest) GetRequest() isCardanoRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CardanoRequest) GetXpubs() *CardanoXpubsRequest {
	if x, ok := m.GetRequest().(*CardanoRequest_Xpubs); ok {
		return x.Xpubs
	}
	return nil
}

func (m *CardanoRequest) GetAddress() *CardanoAddressRequest {
	if x, ok := m.GetRequest().(*CardanoRequest_Address); ok {
		return x.Address
	}
	return nil
}

func (m *CardanoRequest) GetSignTransaction() *CardanoSignTransactionRequest {
	if x, ok := m.GetRequest().(*CardanoRequest_SignTransaction); ok {
		return x.SignTransaction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CardanoRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CardanoRequest_Xpubs)(nil),
		(*CardanoRequest_Address)(nil),
		(*CardanoRequest_SignTransaction)(nil),
	}
}

type CardanoResponse struct {
	// Types that are valid to be assigned to Response:
	//	*CardanoResponse_Xpubs
	//	*CardanoResponse_Pub
	//	*CardanoResponse_SignTransaction
	Response             isCardanoResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CardanoResponse) Reset()         { *m = CardanoResponse{} }
func (m *CardanoResponse) String() string { return proto.CompactTextString(m) }
func (*CardanoResponse) ProtoMessage()    {}
func (*CardanoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_785ed7eccc80ff2e, []int{7}
}

func (m *CardanoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardanoResponse.Unmarshal(m, b)
}
func (m *CardanoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardanoResponse.Marshal(b, m, deterministic)
}
func (m *CardanoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardanoResponse.Merge(m, src)
}
func (m *CardanoResponse) XXX_Size() int {
	return xxx_messageInfo_CardanoResponse.Size(m)
}
func (m *CardanoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardanoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardanoResponse proto.InternalMessageInfo

type isCardanoResponse_Response interface {
	isCardanoResponse_Response()
}

type CardanoResponse_Xpubs struct {
	Xpubs *CardanoXpubsResponse `protobuf:"bytes,1,opt,name=xpubs,proto3,oneof"`
}

type CardanoResponse_Pub struct {
	Pub *PubResponse `protobuf:"bytes,2,opt,name=pub,proto3,oneof"`
}

type CardanoResponse_SignTransaction struct {
	SignTransaction *CardanoSignTransactionResponse `protobuf:"bytes,3,opt,name=sign_transaction,json=signTransaction,proto3,oneof"`
}

func (*CardanoResponse_Xpubs) isCardanoResponse_Response() {}

func (*CardanoResponse_Pub) isCardanoResponse_Response() {}

func (*CardanoResponse_SignTransaction) isCardanoResponse_Response() {}

func (m *CardanoResponse) GetResponse() isCardanoResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *CardanoResponse) GetXpubs() *CardanoXpubsResponse {
	if x, ok := m.GetResponse().(*CardanoResponse_Xpubs); ok {
		return x.Xpubs
	}
	return nil
}

func (m *CardanoResponse) GetPub() *PubResponse {
	if x, ok := m.GetResponse().(*CardanoResponse_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *CardanoResponse) GetSignTransaction() *CardanoSignTransactionResponse {
	if x, ok := m.GetResponse().(*CardanoResponse_SignTransaction); ok {
		return x.SignTransaction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CardanoResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CardanoResponse_Xpubs)(nil),
		(*CardanoResponse_Pub)(nil),
		(*CardanoResponse_SignTransaction)(nil),
	}
}

func init() {
	proto.RegisterEnum("shiftcrypto.bitbox02.CardanoNetwork", CardanoNetwork_name, CardanoNetwork_value)
	proto.RegisterType((*CardanoXpubsRequest)(nil), "shiftcrypto.bitbox02.CardanoXpubsRequest")
	proto.RegisterType((*CardanoXpubsResponse)(nil), "shiftcrypto.bitbox02.CardanoXpubsResponse")
	proto.RegisterType((*CardanoScriptConfig)(nil), "shiftcrypto.bitbox02.CardanoScriptConfig")
	proto.RegisterType((*CardanoScriptConfig_PkhSkh)(nil), "shiftcrypto.bitbox02.CardanoScriptConfig.PkhSkh")
	proto.RegisterType((*CardanoAddressRequest)(nil), "shiftcrypto.bitbox02.CardanoAddressRequest")
	proto.RegisterType((*CardanoSignTransactionRequest)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest")
	proto.RegisterType((*CardanoSignTransactionRequest_Input)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.Input")
	proto.RegisterType((*CardanoSignTransactionRequest_AssetGroup)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.AssetGroup")
	proto.RegisterType((*CardanoSignTransactionRequest_AssetGroup_Token)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.AssetGroup.Token")
	proto.RegisterType((*CardanoSignTransactionRequest_Output)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.Output")
	proto.RegisterType((*CardanoSignTransactionRequest_Certificate)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.Certificate")
	proto.RegisterType((*CardanoSignTransactionRequest_Certificate_StakeDelegation)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.Certificate.StakeDelegation")
	proto.RegisterType((*CardanoSignTransactionRequest_Withdrawal)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionRequest.Withdrawal")
	proto.RegisterType((*CardanoSignTransactionResponse)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionResponse")
	proto.RegisterType((*CardanoSignTransactionResponse_ShelleyWitness)(nil), "shiftcrypto.bitbox02.CardanoSignTransactionResponse.ShelleyWitness")
	proto.RegisterType((*CardanoRequest)(nil), "shiftcrypto.bitbox02.CardanoRequest")
	proto.RegisterType((*CardanoResponse)(nil), "shiftcrypto.bitbox02.CardanoResponse")
}

func init() { proto.RegisterFile("cardano.proto", fileDescriptor_785ed7eccc80ff2e) }

var fileDescriptor_785ed7eccc80ff2e = []byte{
	// 1067 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6f, 0x6f, 0x1b, 0xc5,
	0x13, 0xf6, 0xc5, 0x89, 0xff, 0x8c, 0xcf, 0x4e, 0xba, 0x4d, 0xf5, 0x3b, 0xf9, 0x47, 0x51, 0x6a,
	0x2a, 0x11, 0x0a, 0xb2, 0xaa, 0x14, 0x10, 0x45, 0x55, 0x51, 0x93, 0x4a, 0x75, 0x14, 0x35, 0x09,
	0xeb, 0x88, 0x22, 0x84, 0x74, 0x5d, 0xdf, 0x6d, 0xec, 0x95, 0x2f, 0xb7, 0xc7, 0xed, 0x5e, 0x12,
	0x23, 0xde, 0x23, 0x3e, 0x16, 0x12, 0xbc, 0xe2, 0x53, 0xf0, 0x35, 0xe0, 0x0d, 0xda, 0x3f, 0x67,
	0xfb, 0x90, 0x6b, 0x82, 0xe9, 0x3b, 0xef, 0xb3, 0x33, 0xcf, 0xcc, 0x3c, 0x9e, 0x99, 0x5b, 0x68,
	0x06, 0x24, 0x0d, 0x49, 0xcc, 0xbb, 0x49, 0xca, 0x25, 0x47, 0xdb, 0x62, 0xc4, 0xce, 0x65, 0x90,
	0x4e, 0x12, 0xc9, 0xbb, 0x03, 0x26, 0x07, 0xfc, 0xfa, 0xe1, 0x5e, 0xdb, 0x0d, 0xf8, 0xc5, 0x05,
	0x8f, 0x8d, 0x4d, 0xe7, 0x14, 0x6e, 0x1f, 0x18, 0xa7, 0xaf, 0x93, 0x6c, 0x20, 0x30, 0xfd, 0x2e,
	0xa3, 0x42, 0xa2, 0xc7, 0x50, 0x1b, 0xd3, 0x49, 0x42, 0xe4, 0x48, 0x78, 0xce, 0x4e, 0x79, 0xb7,
	0xb1, 0x77, 0xb7, 0xbb, 0x88, 0xad, 0x7b, 0x64, 0xac, 0xf0, 0xd4, 0xbc, 0xf3, 0x11, 0x6c, 0x17,
	0x19, 0x45, 0xc2, 0x63, 0x41, 0xd1, 0x36, 0x6c, 0x5c, 0x2b, 0x40, 0xf3, 0xb9, 0xd8, 0x1c, 0x3a,
	0xbf, 0x38, 0xd3, 0x04, 0xfa, 0x41, 0xca, 0x12, 0x79, 0xc0, 0xe3, 0x73, 0x36, 0x44, 0x47, 0x50,
	0x4d, 0xc6, 0x23, 0x5f, 0x8c, 0x47, 0x9e, 0xb3, 0xe3, 0xec, 0x36, 0xf6, 0x1e, 0x2e, 0x8e, 0xbf,
	0xc0, 0xb7, 0x7b, 0x3a, 0x1e, 0xf5, 0xc7, 0xa3, 0x5e, 0x09, 0x57, 0x12, 0xfd, 0xab, 0xfd, 0x15,
	0x54, 0x0c, 0x86, 0xde, 0x87, 0x4d, 0x9b, 0xa8, 0x9f, 0x90, 0xc9, 0x05, 0x8d, 0xa5, 0x4e, 0xa7,
	0x89, 0x5b, 0x16, 0x3e, 0x35, 0x28, 0x7a, 0x0f, 0x9a, 0xb9, 0xa1, 0x90, 0x64, 0x4c, 0xbd, 0x35,
	0x6d, 0xe6, 0x5a, 0xb0, 0xaf, 0xb0, 0xfd, 0x1a, 0x54, 0x02, 0x1d, 0xb2, 0xf3, 0xb3, 0x03, 0x77,
	0x6c, 0x2a, 0xcf, 0xc2, 0x30, 0xa5, 0x62, 0xaa, 0xe4, 0x53, 0xa8, 0xc6, 0x54, 0x5e, 0xf1, 0x74,
	0xac, 0x0b, 0x69, 0xed, 0xdd, 0x5f, 0x5a, 0xc8, 0xb1, 0xb1, 0xc5, 0xb9, 0x13, 0xf2, 0xa0, 0x1a,
	0x32, 0x91, 0x44, 0x64, 0xe2, 0xad, 0xed, 0x38, 0xbb, 0x35, 0x9c, 0x1f, 0xd1, 0x31, 0x34, 0x85,
	0x2e, 0xdb, 0x37, 0x49, 0x78, 0x65, 0x2d, 0xd4, 0x07, 0x37, 0x16, 0x0a, 0xbb, 0x62, 0xee, 0xd4,
	0xf9, 0xcd, 0x85, 0xbb, 0xb9, 0x15, 0x1b, 0xc6, 0x67, 0x29, 0x89, 0x05, 0x09, 0x24, 0xe3, 0xf1,
	0xdb, 0xaa, 0xe5, 0x4b, 0xa8, 0xb0, 0x38, 0xc9, 0xa4, 0xd0, 0x6a, 0x36, 0xf6, 0x1e, 0x2f, 0x4f,
	0x75, 0x61, 0x12, 0xdd, 0x43, 0xc5, 0x80, 0x2d, 0x11, 0x3a, 0x83, 0x2a, 0xcf, 0xa4, 0xe6, 0x2c,
	0x6b, 0xce, 0xcf, 0x57, 0xe1, 0x3c, 0xd1, 0x14, 0x38, 0xa7, 0x42, 0x5b, 0x50, 0x3e, 0xa7, 0xd4,
	0x5b, 0xdf, 0x71, 0x76, 0xd7, 0xb1, 0xfa, 0xa9, 0x10, 0x29, 0x23, 0x6f, 0xc3, 0x20, 0x52, 0x46,
	0x28, 0x00, 0x37, 0xa0, 0xa9, 0x64, 0xe7, 0x2c, 0x20, 0x92, 0x0a, 0xaf, 0xa2, 0xc3, 0x7f, 0xb1,
	0x4a, 0xf8, 0x83, 0x19, 0x0f, 0x2e, 0x90, 0xa2, 0xd7, 0xd0, 0xb8, 0x62, 0x72, 0x14, 0xa6, 0xe4,
	0x8a, 0x44, 0xc2, 0xab, 0xea, 0x18, 0x4f, 0x57, 0x89, 0xf1, 0x6a, 0x4a, 0x83, 0xe7, 0x29, 0xd1,
	0xa7, 0xf0, 0xbf, 0x4b, 0x12, 0xb1, 0x90, 0xc9, 0x89, 0xcf, 0x62, 0x49, 0xd3, 0x4b, 0x12, 0xa9,
	0x96, 0x4f, 0xa5, 0x57, 0xd3, 0xc5, 0xde, 0xc9, 0xaf, 0x0f, 0xed, 0x6d, 0x5f, 0x5d, 0xa2, 0xfb,
	0xd0, 0x22, 0x51, 0xc4, 0xaf, 0xfc, 0xef, 0x69, 0xca, 0x7d, 0xa5, 0x4d, 0x5d, 0xb7, 0xa7, 0xab,
	0xd1, 0x6f, 0x68, 0xca, 0xcf, 0x64, 0xd4, 0x1e, 0xc3, 0x86, 0xfe, 0xbf, 0x54, 0x1b, 0xdb, 0xd1,
	0xb1, 0x03, 0x97, 0x1f, 0x51, 0x07, 0x9a, 0x49, 0x4a, 0x2f, 0x7d, 0x9e, 0x49, 0x7f, 0x44, 0xc4,
	0x48, 0xb7, 0xb9, 0x8b, 0x1b, 0x0a, 0x3c, 0xc9, 0x64, 0x8f, 0x88, 0x91, 0x0a, 0x36, 0xb5, 0x61,
	0x71, 0x48, 0xaf, 0x75, 0xaf, 0x37, 0xb1, 0x6b, 0x8d, 0x0e, 0x15, 0xd6, 0xfe, 0xd5, 0x01, 0x78,
	0x26, 0x04, 0x95, 0x2f, 0x52, 0x9e, 0x25, 0xe8, 0xff, 0x50, 0x4f, 0x78, 0xc4, 0x82, 0x89, 0xcf,
	0x42, 0xdd, 0xaf, 0x2e, 0xae, 0x19, 0xe0, 0x30, 0x44, 0xdf, 0x42, 0x45, 0xf2, 0x31, 0x8d, 0xf3,
	0x56, 0x7c, 0xbe, 0x8a, 0xa6, 0xb3, 0x60, 0xdd, 0x33, 0x45, 0x86, 0x2d, 0x67, 0xfb, 0x09, 0x6c,
	0x68, 0x00, 0xdd, 0x05, 0x20, 0xca, 0xc8, 0x8f, 0xc9, 0x05, 0xb5, 0x49, 0xd4, 0x35, 0x72, 0x4c,
	0x2e, 0xf4, 0x4e, 0xbc, 0x24, 0x51, 0x46, 0x75, 0xcd, 0xeb, 0xd8, 0x1c, 0xda, 0x7f, 0x38, 0x50,
	0x31, 0x1d, 0xa9, 0xf6, 0x15, 0x8d, 0x03, 0x1e, 0xd2, 0xd0, 0x27, 0x66, 0xaf, 0x68, 0x92, 0x3a,
	0x6e, 0x59, 0xd8, 0x6e, 0x9b, 0xc5, 0x4c, 0x6f, 0x7b, 0x45, 0x20, 0x02, 0xae, 0x29, 0x67, 0xa8,
	0x8a, 0x16, 0xde, 0xfa, 0xea, 0xfd, 0x38, 0xd3, 0x0e, 0x37, 0xc8, 0xf4, 0xb7, 0x68, 0xff, 0x58,
	0x86, 0xc6, 0xdc, 0x3c, 0xa0, 0x63, 0x40, 0x7a, 0x01, 0xfb, 0x29, 0x1d, 0x32, 0x21, 0x53, 0xa2,
	0x48, 0xec, 0x37, 0x61, 0xf9, 0x37, 0xa9, 0x57, 0xc2, 0xb7, 0xb4, 0x2b, 0x9e, 0xf3, 0x44, 0x18,
	0xb6, 0x0d, 0x5f, 0x48, 0x0b, 0x8c, 0x6b, 0x37, 0x63, 0xbc, 0xad, 0x9d, 0x9f, 0x17, 0x7c, 0xd1,
	0x0f, 0xb0, 0x95, 0x73, 0x46, 0x74, 0x68, 0xf8, 0x8c, 0xd2, 0x27, 0xff, 0x71, 0x1d, 0x74, 0xfb,
	0x26, 0x5c, 0x4e, 0xdb, 0x2b, 0xe1, 0x4d, 0x51, 0x84, 0xda, 0xc7, 0xb0, 0xf9, 0x37, 0xab, 0x25,
	0xd3, 0x76, 0x0f, 0xdc, 0x84, 0xf3, 0xc8, 0x1f, 0xd3, 0x49, 0x61, 0xd8, 0x38, 0x8f, 0x8e, 0x0c,
	0xb4, 0x5f, 0x81, 0x75, 0xb5, 0x83, 0xda, 0x4f, 0x00, 0x66, 0x4b, 0x63, 0x09, 0xe5, 0xc2, 0xd6,
	0xeb, 0xfc, 0xee, 0xc0, 0xbb, 0x6f, 0x2a, 0xd3, 0xbe, 0x08, 0x12, 0xb8, 0x25, 0x46, 0x34, 0x8a,
	0xe8, 0xc4, 0xbf, 0x62, 0x32, 0xa6, 0x42, 0xd0, 0xfc, 0xb5, 0x71, 0xf0, 0xef, 0x74, 0x33, 0x84,
	0xdd, 0xbe, 0x61, 0x7b, 0x65, 0xc8, 0xf0, 0x96, 0x28, 0x9c, 0xa9, 0x68, 0xbf, 0x84, 0x56, 0xd1,
	0x46, 0x0d, 0x68, 0x92, 0x0d, 0x22, 0x16, 0x28, 0x45, 0xf2, 0x01, 0x35, 0xc8, 0x11, 0x9d, 0xa0,
	0x77, 0xa0, 0x2e, 0xd8, 0x30, 0x26, 0x32, 0x4b, 0xa9, 0xd5, 0x6a, 0x06, 0x74, 0x7e, 0x5a, 0x83,
	0x96, 0x4d, 0x29, 0xff, 0x44, 0x3e, 0x9b, 0xbd, 0x72, 0xfe, 0x79, 0xd2, 0xe6, 0x9f, 0x5c, 0xbd,
	0x92, 0x7d, 0x12, 0xa1, 0x17, 0x50, 0xcd, 0x67, 0xdd, 0x34, 0xe5, 0x87, 0x4b, 0x49, 0x8a, 0xef,
	0x8d, 0x5e, 0x09, 0xe7, 0xde, 0xe8, 0x35, 0x6c, 0xa9, 0x5c, 0x7d, 0x39, 0x93, 0xca, 0xb6, 0xe5,
	0xa3, 0x15, 0xda, 0x52, 0xb7, 0x5e, 0xf1, 0x66, 0xbf, 0x0e, 0xd5, 0xd4, 0xdc, 0x76, 0xfe, 0x74,
	0x60, 0x73, 0xaa, 0x85, 0xfd, 0x83, 0xf7, 0x8b, 0x62, 0x3c, 0xb8, 0x89, 0x18, 0xc6, 0x75, 0xa6,
	0xc6, 0x27, 0x50, 0x4e, 0xb2, 0x81, 0x55, 0xe2, 0xde, 0x62, 0x86, 0xd3, 0x6c, 0x30, 0xe7, 0xa8,
	0xec, 0x11, 0x79, 0x63, 0xed, 0x1f, 0xaf, 0xd2, 0x5a, 0x8b, 0x8a, 0x07, 0xa8, 0xa5, 0xf6, 0xfa,
	0xc1, 0x67, 0xd3, 0x46, 0xb0, 0x8f, 0x1e, 0x84, 0xa6, 0xc8, 0x4b, 0xc2, 0xe2, 0x98, 0xca, 0xad,
	0xd2, 0x1c, 0x76, 0x46, 0x85, 0x54, 0x98, 0x33, 0xa8, 0xe8, 0x77, 0xf8, 0xa3, 0xbf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x76, 0xd8, 0x9d, 0xf5, 0xbc, 0x0b, 0x00, 0x00,
}
