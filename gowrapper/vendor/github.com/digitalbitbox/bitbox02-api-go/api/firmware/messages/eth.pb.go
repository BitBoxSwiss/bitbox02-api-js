// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eth.proto

package messages

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ETHCoin int32

const (
	ETHCoin_ETH        ETHCoin = 0
	ETHCoin_RopstenETH ETHCoin = 1
	ETHCoin_RinkebyETH ETHCoin = 2
)

var ETHCoin_name = map[int32]string{
	0: "ETH",
	1: "RopstenETH",
	2: "RinkebyETH",
}

var ETHCoin_value = map[string]int32{
	"ETH":        0,
	"RopstenETH": 1,
	"RinkebyETH": 2,
}

func (x ETHCoin) String() string {
	return proto.EnumName(ETHCoin_name, int32(x))
}

func (ETHCoin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0}
}

type ETHPubRequest_OutputType int32

const (
	ETHPubRequest_ADDRESS ETHPubRequest_OutputType = 0
	ETHPubRequest_XPUB    ETHPubRequest_OutputType = 1
)

var ETHPubRequest_OutputType_name = map[int32]string{
	0: "ADDRESS",
	1: "XPUB",
}

var ETHPubRequest_OutputType_value = map[string]int32{
	"ADDRESS": 0,
	"XPUB":    1,
}

func (x ETHPubRequest_OutputType) String() string {
	return proto.EnumName(ETHPubRequest_OutputType_name, int32(x))
}

func (ETHPubRequest_OutputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0, 0}
}

type ETHSignTypedMessageRequest_DataType int32

const (
	ETHSignTypedMessageRequest_UNKNOWN ETHSignTypedMessageRequest_DataType = 0
	ETHSignTypedMessageRequest_BYTES   ETHSignTypedMessageRequest_DataType = 1
	ETHSignTypedMessageRequest_UINT    ETHSignTypedMessageRequest_DataType = 2
	ETHSignTypedMessageRequest_INT     ETHSignTypedMessageRequest_DataType = 3
	ETHSignTypedMessageRequest_BOOL    ETHSignTypedMessageRequest_DataType = 4
	ETHSignTypedMessageRequest_ADDRESS ETHSignTypedMessageRequest_DataType = 5
	ETHSignTypedMessageRequest_STRING  ETHSignTypedMessageRequest_DataType = 6
	ETHSignTypedMessageRequest_ARRAY   ETHSignTypedMessageRequest_DataType = 7
	ETHSignTypedMessageRequest_STRUCT  ETHSignTypedMessageRequest_DataType = 8
)

var ETHSignTypedMessageRequest_DataType_name = map[int32]string{
	0: "UNKNOWN",
	1: "BYTES",
	2: "UINT",
	3: "INT",
	4: "BOOL",
	5: "ADDRESS",
	6: "STRING",
	7: "ARRAY",
	8: "STRUCT",
}

var ETHSignTypedMessageRequest_DataType_value = map[string]int32{
	"UNKNOWN": 0,
	"BYTES":   1,
	"UINT":    2,
	"INT":     3,
	"BOOL":    4,
	"ADDRESS": 5,
	"STRING":  6,
	"ARRAY":   7,
	"STRUCT":  8,
}

func (x ETHSignTypedMessageRequest_DataType) String() string {
	return proto.EnumName(ETHSignTypedMessageRequest_DataType_name, int32(x))
}

func (ETHSignTypedMessageRequest_DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4, 0}
}

type ETHTypedMessageValueResponse_RootObject int32

const (
	ETHTypedMessageValueResponse_UNKNOWN ETHTypedMessageValueResponse_RootObject = 0
	ETHTypedMessageValueResponse_DOMAIN  ETHTypedMessageValueResponse_RootObject = 1
	ETHTypedMessageValueResponse_MESSAGE ETHTypedMessageValueResponse_RootObject = 2
)

var ETHTypedMessageValueResponse_RootObject_name = map[int32]string{
	0: "UNKNOWN",
	1: "DOMAIN",
	2: "MESSAGE",
}

var ETHTypedMessageValueResponse_RootObject_value = map[string]int32{
	"UNKNOWN": 0,
	"DOMAIN":  1,
	"MESSAGE": 2,
}

func (x ETHTypedMessageValueResponse_RootObject) String() string {
	return proto.EnumName(ETHTypedMessageValueResponse_RootObject_name, int32(x))
}

func (ETHTypedMessageValueResponse_RootObject) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{5, 0}
}

type ETHPubRequest struct {
	Keypath []uint32 `protobuf:"varint,1,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	// Deprecated: use chain_id instead.
	Coin            ETHCoin                  `protobuf:"varint,2,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	OutputType      ETHPubRequest_OutputType `protobuf:"varint,3,opt,name=output_type,json=outputType,proto3,enum=shiftcrypto.bitbox02.ETHPubRequest_OutputType" json:"output_type,omitempty"`
	Display         bool                     `protobuf:"varint,4,opt,name=display,proto3" json:"display,omitempty"`
	ContractAddress []byte                   `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// If non-zero, `coin` is ignored and `chain_id` is used to identify the network.
	ChainId              uint64   `protobuf:"varint,6,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHPubRequest) Reset()         { *m = ETHPubRequest{} }
func (m *ETHPubRequest) String() string { return proto.CompactTextString(m) }
func (*ETHPubRequest) ProtoMessage()    {}
func (*ETHPubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0}
}

func (m *ETHPubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHPubRequest.Unmarshal(m, b)
}
func (m *ETHPubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHPubRequest.Marshal(b, m, deterministic)
}
func (m *ETHPubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHPubRequest.Merge(m, src)
}
func (m *ETHPubRequest) XXX_Size() int {
	return xxx_messageInfo_ETHPubRequest.Size(m)
}
func (m *ETHPubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHPubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHPubRequest proto.InternalMessageInfo

func (m *ETHPubRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHPubRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHPubRequest) GetOutputType() ETHPubRequest_OutputType {
	if m != nil {
		return m.OutputType
	}
	return ETHPubRequest_ADDRESS
}

func (m *ETHPubRequest) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

func (m *ETHPubRequest) GetContractAddress() []byte {
	if m != nil {
		return m.ContractAddress
	}
	return nil
}

func (m *ETHPubRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type ETHSignRequest struct {
	// Deprecated: use chain_id instead.
	Coin                ETHCoin                        `protobuf:"varint,1,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	Keypath             []uint32                       `protobuf:"varint,2,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Nonce               []byte                         `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice            []byte                         `protobuf:"bytes,4,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit            []byte                         `protobuf:"bytes,5,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Recipient           []byte                         `protobuf:"bytes,6,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Value               []byte                         `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Data                []byte                         `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	HostNonceCommitment *AntiKleptoHostNonceCommitment `protobuf:"bytes,9,opt,name=host_nonce_commitment,json=hostNonceCommitment,proto3" json:"host_nonce_commitment,omitempty"`
	// If non-zero, `coin` is ignored and `chain_id` is used to identify the network.
	ChainId              uint64   `protobuf:"varint,10,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignRequest) Reset()         { *m = ETHSignRequest{} }
func (m *ETHSignRequest) String() string { return proto.CompactTextString(m) }
func (*ETHSignRequest) ProtoMessage()    {}
func (*ETHSignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{1}
}

func (m *ETHSignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignRequest.Unmarshal(m, b)
}
func (m *ETHSignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignRequest.Marshal(b, m, deterministic)
}
func (m *ETHSignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignRequest.Merge(m, src)
}
func (m *ETHSignRequest) XXX_Size() int {
	return xxx_messageInfo_ETHSignRequest.Size(m)
}
func (m *ETHSignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignRequest proto.InternalMessageInfo

func (m *ETHSignRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHSignRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHSignRequest) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ETHSignRequest) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *ETHSignRequest) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *ETHSignRequest) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *ETHSignRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ETHSignRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ETHSignRequest) GetHostNonceCommitment() *AntiKleptoHostNonceCommitment {
	if m != nil {
		return m.HostNonceCommitment
	}
	return nil
}

func (m *ETHSignRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type ETHSignMessageRequest struct {
	// Deprecated: use chain_id instead.
	Coin                ETHCoin                        `protobuf:"varint,1,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	Keypath             []uint32                       `protobuf:"varint,2,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Msg                 []byte                         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	HostNonceCommitment *AntiKleptoHostNonceCommitment `protobuf:"bytes,4,opt,name=host_nonce_commitment,json=hostNonceCommitment,proto3" json:"host_nonce_commitment,omitempty"`
	// If non-zero, `coin` is ignored and `chain_id` is used to identify the network.
	ChainId              uint64   `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignMessageRequest) Reset()         { *m = ETHSignMessageRequest{} }
func (m *ETHSignMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ETHSignMessageRequest) ProtoMessage()    {}
func (*ETHSignMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{2}
}

func (m *ETHSignMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignMessageRequest.Unmarshal(m, b)
}
func (m *ETHSignMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignMessageRequest.Marshal(b, m, deterministic)
}
func (m *ETHSignMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignMessageRequest.Merge(m, src)
}
func (m *ETHSignMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ETHSignMessageRequest.Size(m)
}
func (m *ETHSignMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignMessageRequest proto.InternalMessageInfo

func (m *ETHSignMessageRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHSignMessageRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHSignMessageRequest) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *ETHSignMessageRequest) GetHostNonceCommitment() *AntiKleptoHostNonceCommitment {
	if m != nil {
		return m.HostNonceCommitment
	}
	return nil
}

func (m *ETHSignMessageRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type ETHSignResponse struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignResponse) Reset()         { *m = ETHSignResponse{} }
func (m *ETHSignResponse) String() string { return proto.CompactTextString(m) }
func (*ETHSignResponse) ProtoMessage()    {}
func (*ETHSignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{3}
}

func (m *ETHSignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignResponse.Unmarshal(m, b)
}
func (m *ETHSignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignResponse.Marshal(b, m, deterministic)
}
func (m *ETHSignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignResponse.Merge(m, src)
}
func (m *ETHSignResponse) XXX_Size() int {
	return xxx_messageInfo_ETHSignResponse.Size(m)
}
func (m *ETHSignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignResponse proto.InternalMessageInfo

func (m *ETHSignResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ETHSignTypedMessageRequest struct {
	ChainId              uint64                                   `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Keypath              []uint32                                 `protobuf:"varint,2,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Types                []*ETHSignTypedMessageRequest_StructType `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	PrimaryType          string                                   `protobuf:"bytes,4,opt,name=primary_type,json=primaryType,proto3" json:"primary_type,omitempty"`
	HostNonceCommitment  *AntiKleptoHostNonceCommitment           `protobuf:"bytes,5,opt,name=host_nonce_commitment,json=hostNonceCommitment,proto3" json:"host_nonce_commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ETHSignTypedMessageRequest) Reset()         { *m = ETHSignTypedMessageRequest{} }
func (m *ETHSignTypedMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ETHSignTypedMessageRequest) ProtoMessage()    {}
func (*ETHSignTypedMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4}
}

func (m *ETHSignTypedMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignTypedMessageRequest.Unmarshal(m, b)
}
func (m *ETHSignTypedMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignTypedMessageRequest.Marshal(b, m, deterministic)
}
func (m *ETHSignTypedMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignTypedMessageRequest.Merge(m, src)
}
func (m *ETHSignTypedMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ETHSignTypedMessageRequest.Size(m)
}
func (m *ETHSignTypedMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignTypedMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignTypedMessageRequest proto.InternalMessageInfo

func (m *ETHSignTypedMessageRequest) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *ETHSignTypedMessageRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHSignTypedMessageRequest) GetTypes() []*ETHSignTypedMessageRequest_StructType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *ETHSignTypedMessageRequest) GetPrimaryType() string {
	if m != nil {
		return m.PrimaryType
	}
	return ""
}

func (m *ETHSignTypedMessageRequest) GetHostNonceCommitment() *AntiKleptoHostNonceCommitment {
	if m != nil {
		return m.HostNonceCommitment
	}
	return nil
}

type ETHSignTypedMessageRequest_MemberType struct {
	Type                 ETHSignTypedMessageRequest_DataType    `protobuf:"varint,1,opt,name=type,proto3,enum=shiftcrypto.bitbox02.ETHSignTypedMessageRequest_DataType" json:"type,omitempty"`
	Size                 uint32                                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	StructName           string                                 `protobuf:"bytes,3,opt,name=struct_name,json=structName,proto3" json:"struct_name,omitempty"`
	ArrayType            *ETHSignTypedMessageRequest_MemberType `protobuf:"bytes,4,opt,name=array_type,json=arrayType,proto3" json:"array_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ETHSignTypedMessageRequest_MemberType) Reset()         { *m = ETHSignTypedMessageRequest_MemberType{} }
func (m *ETHSignTypedMessageRequest_MemberType) String() string { return proto.CompactTextString(m) }
func (*ETHSignTypedMessageRequest_MemberType) ProtoMessage()    {}
func (*ETHSignTypedMessageRequest_MemberType) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4, 0}
}

func (m *ETHSignTypedMessageRequest_MemberType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignTypedMessageRequest_MemberType.Unmarshal(m, b)
}
func (m *ETHSignTypedMessageRequest_MemberType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignTypedMessageRequest_MemberType.Marshal(b, m, deterministic)
}
func (m *ETHSignTypedMessageRequest_MemberType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignTypedMessageRequest_MemberType.Merge(m, src)
}
func (m *ETHSignTypedMessageRequest_MemberType) XXX_Size() int {
	return xxx_messageInfo_ETHSignTypedMessageRequest_MemberType.Size(m)
}
func (m *ETHSignTypedMessageRequest_MemberType) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignTypedMessageRequest_MemberType.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignTypedMessageRequest_MemberType proto.InternalMessageInfo

func (m *ETHSignTypedMessageRequest_MemberType) GetType() ETHSignTypedMessageRequest_DataType {
	if m != nil {
		return m.Type
	}
	return ETHSignTypedMessageRequest_UNKNOWN
}

func (m *ETHSignTypedMessageRequest_MemberType) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ETHSignTypedMessageRequest_MemberType) GetStructName() string {
	if m != nil {
		return m.StructName
	}
	return ""
}

func (m *ETHSignTypedMessageRequest_MemberType) GetArrayType() *ETHSignTypedMessageRequest_MemberType {
	if m != nil {
		return m.ArrayType
	}
	return nil
}

type ETHSignTypedMessageRequest_Member struct {
	Name                 string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 *ETHSignTypedMessageRequest_MemberType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ETHSignTypedMessageRequest_Member) Reset()         { *m = ETHSignTypedMessageRequest_Member{} }
func (m *ETHSignTypedMessageRequest_Member) String() string { return proto.CompactTextString(m) }
func (*ETHSignTypedMessageRequest_Member) ProtoMessage()    {}
func (*ETHSignTypedMessageRequest_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4, 1}
}

func (m *ETHSignTypedMessageRequest_Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignTypedMessageRequest_Member.Unmarshal(m, b)
}
func (m *ETHSignTypedMessageRequest_Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignTypedMessageRequest_Member.Marshal(b, m, deterministic)
}
func (m *ETHSignTypedMessageRequest_Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignTypedMessageRequest_Member.Merge(m, src)
}
func (m *ETHSignTypedMessageRequest_Member) XXX_Size() int {
	return xxx_messageInfo_ETHSignTypedMessageRequest_Member.Size(m)
}
func (m *ETHSignTypedMessageRequest_Member) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignTypedMessageRequest_Member.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignTypedMessageRequest_Member proto.InternalMessageInfo

func (m *ETHSignTypedMessageRequest_Member) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ETHSignTypedMessageRequest_Member) GetType() *ETHSignTypedMessageRequest_MemberType {
	if m != nil {
		return m.Type
	}
	return nil
}

type ETHSignTypedMessageRequest_StructType struct {
	Name                 string                               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Members              []*ETHSignTypedMessageRequest_Member `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ETHSignTypedMessageRequest_StructType) Reset()         { *m = ETHSignTypedMessageRequest_StructType{} }
func (m *ETHSignTypedMessageRequest_StructType) String() string { return proto.CompactTextString(m) }
func (*ETHSignTypedMessageRequest_StructType) ProtoMessage()    {}
func (*ETHSignTypedMessageRequest_StructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4, 2}
}

func (m *ETHSignTypedMessageRequest_StructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignTypedMessageRequest_StructType.Unmarshal(m, b)
}
func (m *ETHSignTypedMessageRequest_StructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignTypedMessageRequest_StructType.Marshal(b, m, deterministic)
}
func (m *ETHSignTypedMessageRequest_StructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignTypedMessageRequest_StructType.Merge(m, src)
}
func (m *ETHSignTypedMessageRequest_StructType) XXX_Size() int {
	return xxx_messageInfo_ETHSignTypedMessageRequest_StructType.Size(m)
}
func (m *ETHSignTypedMessageRequest_StructType) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignTypedMessageRequest_StructType.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignTypedMessageRequest_StructType proto.InternalMessageInfo

func (m *ETHSignTypedMessageRequest_StructType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ETHSignTypedMessageRequest_StructType) GetMembers() []*ETHSignTypedMessageRequest_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type ETHTypedMessageValueResponse struct {
	RootObject           ETHTypedMessageValueResponse_RootObject `protobuf:"varint,1,opt,name=root_object,json=rootObject,proto3,enum=shiftcrypto.bitbox02.ETHTypedMessageValueResponse_RootObject" json:"root_object,omitempty"`
	Path                 []uint32                                `protobuf:"varint,2,rep,packed,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ETHTypedMessageValueResponse) Reset()         { *m = ETHTypedMessageValueResponse{} }
func (m *ETHTypedMessageValueResponse) String() string { return proto.CompactTextString(m) }
func (*ETHTypedMessageValueResponse) ProtoMessage()    {}
func (*ETHTypedMessageValueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{5}
}

func (m *ETHTypedMessageValueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHTypedMessageValueResponse.Unmarshal(m, b)
}
func (m *ETHTypedMessageValueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHTypedMessageValueResponse.Marshal(b, m, deterministic)
}
func (m *ETHTypedMessageValueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHTypedMessageValueResponse.Merge(m, src)
}
func (m *ETHTypedMessageValueResponse) XXX_Size() int {
	return xxx_messageInfo_ETHTypedMessageValueResponse.Size(m)
}
func (m *ETHTypedMessageValueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHTypedMessageValueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ETHTypedMessageValueResponse proto.InternalMessageInfo

func (m *ETHTypedMessageValueResponse) GetRootObject() ETHTypedMessageValueResponse_RootObject {
	if m != nil {
		return m.RootObject
	}
	return ETHTypedMessageValueResponse_UNKNOWN
}

func (m *ETHTypedMessageValueResponse) GetPath() []uint32 {
	if m != nil {
		return m.Path
	}
	return nil
}

type ETHTypedMessageValueRequest struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHTypedMessageValueRequest) Reset()         { *m = ETHTypedMessageValueRequest{} }
func (m *ETHTypedMessageValueRequest) String() string { return proto.CompactTextString(m) }
func (*ETHTypedMessageValueRequest) ProtoMessage()    {}
func (*ETHTypedMessageValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{6}
}

func (m *ETHTypedMessageValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHTypedMessageValueRequest.Unmarshal(m, b)
}
func (m *ETHTypedMessageValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHTypedMessageValueRequest.Marshal(b, m, deterministic)
}
func (m *ETHTypedMessageValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHTypedMessageValueRequest.Merge(m, src)
}
func (m *ETHTypedMessageValueRequest) XXX_Size() int {
	return xxx_messageInfo_ETHTypedMessageValueRequest.Size(m)
}
func (m *ETHTypedMessageValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHTypedMessageValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHTypedMessageValueRequest proto.InternalMessageInfo

func (m *ETHTypedMessageValueRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ETHRequest struct {
	// Types that are valid to be assigned to Request:
	//	*ETHRequest_Pub
	//	*ETHRequest_Sign
	//	*ETHRequest_SignMsg
	//	*ETHRequest_AntikleptoSignature
	//	*ETHRequest_SignTypedMsg
	//	*ETHRequest_TypedMsgValue
	Request              isETHRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ETHRequest) Reset()         { *m = ETHRequest{} }
func (m *ETHRequest) String() string { return proto.CompactTextString(m) }
func (*ETHRequest) ProtoMessage()    {}
func (*ETHRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{7}
}

func (m *ETHRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHRequest.Unmarshal(m, b)
}
func (m *ETHRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHRequest.Marshal(b, m, deterministic)
}
func (m *ETHRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHRequest.Merge(m, src)
}
func (m *ETHRequest) XXX_Size() int {
	return xxx_messageInfo_ETHRequest.Size(m)
}
func (m *ETHRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHRequest proto.InternalMessageInfo

type isETHRequest_Request interface {
	isETHRequest_Request()
}

type ETHRequest_Pub struct {
	Pub *ETHPubRequest `protobuf:"bytes,1,opt,name=pub,proto3,oneof"`
}

type ETHRequest_Sign struct {
	Sign *ETHSignRequest `protobuf:"bytes,2,opt,name=sign,proto3,oneof"`
}

type ETHRequest_SignMsg struct {
	SignMsg *ETHSignMessageRequest `protobuf:"bytes,3,opt,name=sign_msg,json=signMsg,proto3,oneof"`
}

type ETHRequest_AntikleptoSignature struct {
	AntikleptoSignature *AntiKleptoSignatureRequest `protobuf:"bytes,4,opt,name=antiklepto_signature,json=antikleptoSignature,proto3,oneof"`
}

type ETHRequest_SignTypedMsg struct {
	SignTypedMsg *ETHSignTypedMessageRequest `protobuf:"bytes,5,opt,name=sign_typed_msg,json=signTypedMsg,proto3,oneof"`
}

type ETHRequest_TypedMsgValue struct {
	TypedMsgValue *ETHTypedMessageValueRequest `protobuf:"bytes,6,opt,name=typed_msg_value,json=typedMsgValue,proto3,oneof"`
}

func (*ETHRequest_Pub) isETHRequest_Request() {}

func (*ETHRequest_Sign) isETHRequest_Request() {}

func (*ETHRequest_SignMsg) isETHRequest_Request() {}

func (*ETHRequest_AntikleptoSignature) isETHRequest_Request() {}

func (*ETHRequest_SignTypedMsg) isETHRequest_Request() {}

func (*ETHRequest_TypedMsgValue) isETHRequest_Request() {}

func (m *ETHRequest) GetRequest() isETHRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ETHRequest) GetPub() *ETHPubRequest {
	if x, ok := m.GetRequest().(*ETHRequest_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *ETHRequest) GetSign() *ETHSignRequest {
	if x, ok := m.GetRequest().(*ETHRequest_Sign); ok {
		return x.Sign
	}
	return nil
}

func (m *ETHRequest) GetSignMsg() *ETHSignMessageRequest {
	if x, ok := m.GetRequest().(*ETHRequest_SignMsg); ok {
		return x.SignMsg
	}
	return nil
}

func (m *ETHRequest) GetAntikleptoSignature() *AntiKleptoSignatureRequest {
	if x, ok := m.GetRequest().(*ETHRequest_AntikleptoSignature); ok {
		return x.AntikleptoSignature
	}
	return nil
}

func (m *ETHRequest) GetSignTypedMsg() *ETHSignTypedMessageRequest {
	if x, ok := m.GetRequest().(*ETHRequest_SignTypedMsg); ok {
		return x.SignTypedMsg
	}
	return nil
}

func (m *ETHRequest) GetTypedMsgValue() *ETHTypedMessageValueRequest {
	if x, ok := m.GetRequest().(*ETHRequest_TypedMsgValue); ok {
		return x.TypedMsgValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ETHRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ETHRequest_Pub)(nil),
		(*ETHRequest_Sign)(nil),
		(*ETHRequest_SignMsg)(nil),
		(*ETHRequest_AntikleptoSignature)(nil),
		(*ETHRequest_SignTypedMsg)(nil),
		(*ETHRequest_TypedMsgValue)(nil),
	}
}

type ETHResponse struct {
	// Types that are valid to be assigned to Response:
	//	*ETHResponse_Pub
	//	*ETHResponse_Sign
	//	*ETHResponse_AntikleptoSignerCommitment
	//	*ETHResponse_TypedMsgValue
	Response             isETHResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ETHResponse) Reset()         { *m = ETHResponse{} }
func (m *ETHResponse) String() string { return proto.CompactTextString(m) }
func (*ETHResponse) ProtoMessage()    {}
func (*ETHResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{8}
}

func (m *ETHResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHResponse.Unmarshal(m, b)
}
func (m *ETHResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHResponse.Marshal(b, m, deterministic)
}
func (m *ETHResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHResponse.Merge(m, src)
}
func (m *ETHResponse) XXX_Size() int {
	return xxx_messageInfo_ETHResponse.Size(m)
}
func (m *ETHResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ETHResponse proto.InternalMessageInfo

type isETHResponse_Response interface {
	isETHResponse_Response()
}

type ETHResponse_Pub struct {
	Pub *PubResponse `protobuf:"bytes,1,opt,name=pub,proto3,oneof"`
}

type ETHResponse_Sign struct {
	Sign *ETHSignResponse `protobuf:"bytes,2,opt,name=sign,proto3,oneof"`
}

type ETHResponse_AntikleptoSignerCommitment struct {
	AntikleptoSignerCommitment *AntiKleptoSignerCommitment `protobuf:"bytes,3,opt,name=antiklepto_signer_commitment,json=antikleptoSignerCommitment,proto3,oneof"`
}

type ETHResponse_TypedMsgValue struct {
	TypedMsgValue *ETHTypedMessageValueResponse `protobuf:"bytes,4,opt,name=typed_msg_value,json=typedMsgValue,proto3,oneof"`
}

func (*ETHResponse_Pub) isETHResponse_Response() {}

func (*ETHResponse_Sign) isETHResponse_Response() {}

func (*ETHResponse_AntikleptoSignerCommitment) isETHResponse_Response() {}

func (*ETHResponse_TypedMsgValue) isETHResponse_Response() {}

func (m *ETHResponse) GetResponse() isETHResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ETHResponse) GetPub() *PubResponse {
	if x, ok := m.GetResponse().(*ETHResponse_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *ETHResponse) GetSign() *ETHSignResponse {
	if x, ok := m.GetResponse().(*ETHResponse_Sign); ok {
		return x.Sign
	}
	return nil
}

func (m *ETHResponse) GetAntikleptoSignerCommitment() *AntiKleptoSignerCommitment {
	if x, ok := m.GetResponse().(*ETHResponse_AntikleptoSignerCommitment); ok {
		return x.AntikleptoSignerCommitment
	}
	return nil
}

func (m *ETHResponse) GetTypedMsgValue() *ETHTypedMessageValueResponse {
	if x, ok := m.GetResponse().(*ETHResponse_TypedMsgValue); ok {
		return x.TypedMsgValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ETHResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ETHResponse_Pub)(nil),
		(*ETHResponse_Sign)(nil),
		(*ETHResponse_AntikleptoSignerCommitment)(nil),
		(*ETHResponse_TypedMsgValue)(nil),
	}
}

func init() {
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHCoin", ETHCoin_name, ETHCoin_value)
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHPubRequest_OutputType", ETHPubRequest_OutputType_name, ETHPubRequest_OutputType_value)
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHSignTypedMessageRequest_DataType", ETHSignTypedMessageRequest_DataType_name, ETHSignTypedMessageRequest_DataType_value)
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHTypedMessageValueResponse_RootObject", ETHTypedMessageValueResponse_RootObject_name, ETHTypedMessageValueResponse_RootObject_value)
	proto.RegisterType((*ETHPubRequest)(nil), "shiftcrypto.bitbox02.ETHPubRequest")
	proto.RegisterType((*ETHSignRequest)(nil), "shiftcrypto.bitbox02.ETHSignRequest")
	proto.RegisterType((*ETHSignMessageRequest)(nil), "shiftcrypto.bitbox02.ETHSignMessageRequest")
	proto.RegisterType((*ETHSignResponse)(nil), "shiftcrypto.bitbox02.ETHSignResponse")
	proto.RegisterType((*ETHSignTypedMessageRequest)(nil), "shiftcrypto.bitbox02.ETHSignTypedMessageRequest")
	proto.RegisterType((*ETHSignTypedMessageRequest_MemberType)(nil), "shiftcrypto.bitbox02.ETHSignTypedMessageRequest.MemberType")
	proto.RegisterType((*ETHSignTypedMessageRequest_Member)(nil), "shiftcrypto.bitbox02.ETHSignTypedMessageRequest.Member")
	proto.RegisterType((*ETHSignTypedMessageRequest_StructType)(nil), "shiftcrypto.bitbox02.ETHSignTypedMessageRequest.StructType")
	proto.RegisterType((*ETHTypedMessageValueResponse)(nil), "shiftcrypto.bitbox02.ETHTypedMessageValueResponse")
	proto.RegisterType((*ETHTypedMessageValueRequest)(nil), "shiftcrypto.bitbox02.ETHTypedMessageValueRequest")
	proto.RegisterType((*ETHRequest)(nil), "shiftcrypto.bitbox02.ETHRequest")
	proto.RegisterType((*ETHResponse)(nil), "shiftcrypto.bitbox02.ETHResponse")
}

func init() { proto.RegisterFile("eth.proto", fileDescriptor_d980f775760351f6) }

var fileDescriptor_d980f775760351f6 = []byte{
	// 1109 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0x8f, 0xf3, 0x3f, 0xe3, 0xdc, 0xd5, 0xda, 0x5e, 0xa5, 0x90, 0x1e, 0x22, 0x4d, 0x41, 0x0a,
	0x20, 0x85, 0x36, 0x27, 0x54, 0x41, 0xc5, 0x43, 0xee, 0x2e, 0xaa, 0x4f, 0x6d, 0x92, 0xeb, 0xc6,
	0x07, 0x2d, 0x20, 0x2c, 0xc7, 0x59, 0x92, 0xe5, 0xce, 0x5e, 0xe3, 0xdd, 0x20, 0xc2, 0xc7, 0xe2,
	0x43, 0xf0, 0x3d, 0x78, 0xe7, 0xb1, 0x2f, 0xf0, 0x84, 0x76, 0x6d, 0xc7, 0x49, 0x2f, 0xb9, 0xde,
	0x15, 0xfa, 0xe4, 0x9d, 0xd9, 0x9d, 0x99, 0x9d, 0xdf, 0x6f, 0x66, 0xd6, 0x50, 0x21, 0x62, 0xd6,
	0x0e, 0x42, 0x26, 0x18, 0xda, 0xe3, 0x33, 0xfa, 0xa3, 0x70, 0xc3, 0x45, 0x20, 0x58, 0x7b, 0x4c,
	0xc5, 0x98, 0xfd, 0xfa, 0xa0, 0x53, 0xaf, 0xba, 0xcc, 0xf3, 0x98, 0x1f, 0x9d, 0xa9, 0x1b, 0x8e,
	0x2f, 0xe8, 0xf9, 0x05, 0x91, 0x47, 0x94, 0xa6, 0xf9, 0x7b, 0x16, 0x76, 0x7a, 0x96, 0x79, 0x3a,
	0x1f, 0x63, 0xf2, 0xf3, 0x9c, 0x70, 0x81, 0x6a, 0x50, 0x3a, 0x27, 0x8b, 0xc0, 0x11, 0xb3, 0x9a,
	0xd6, 0xc8, 0xb5, 0x76, 0x70, 0x22, 0xa2, 0x87, 0x90, 0x77, 0x19, 0xf5, 0x6b, 0xd9, 0x86, 0xd6,
	0xda, 0xed, 0xbc, 0xdf, 0xde, 0x14, 0xb0, 0xdd, 0xb3, 0xcc, 0x23, 0x46, 0x7d, 0xac, 0x8e, 0xa2,
	0x21, 0xe8, 0x6c, 0x2e, 0x82, 0xb9, 0xb0, 0xc5, 0x22, 0x20, 0xb5, 0x9c, 0xb2, 0x6c, 0x6f, 0xb5,
	0x4c, 0xaf, 0xd1, 0x1e, 0x2a, 0x33, 0x6b, 0x11, 0x10, 0x0c, 0x6c, 0xb9, 0x96, 0xb7, 0x9b, 0x50,
	0x1e, 0x5c, 0x38, 0x8b, 0x5a, 0xbe, 0xa1, 0xb5, 0xca, 0x38, 0x11, 0xd1, 0xc7, 0x60, 0xb8, 0xcc,
	0x17, 0xa1, 0xe3, 0x0a, 0xdb, 0x99, 0x4c, 0x42, 0xc2, 0x79, 0xad, 0xd0, 0xd0, 0x5a, 0x55, 0x7c,
	0x2b, 0xd1, 0x77, 0x23, 0x35, 0x7a, 0x0f, 0xca, 0xee, 0xcc, 0xa1, 0xbe, 0x4d, 0x27, 0xb5, 0x62,
	0x43, 0x6b, 0xe5, 0x71, 0x49, 0xc9, 0x27, 0x93, 0xe6, 0x7d, 0x80, 0x34, 0x32, 0xd2, 0xa1, 0xd4,
	0x3d, 0x3e, 0xc6, 0xbd, 0xd1, 0xc8, 0xc8, 0xa0, 0x32, 0xe4, 0x5f, 0x9c, 0x9e, 0x1d, 0x1a, 0x5a,
	0xf3, 0xef, 0x2c, 0xec, 0xf6, 0x2c, 0x73, 0x44, 0xa7, 0x7e, 0x82, 0x5a, 0x82, 0x8d, 0x76, 0x7d,
	0x6c, 0x56, 0x80, 0xce, 0xae, 0x03, 0xbd, 0x07, 0x05, 0x9f, 0xf9, 0x6e, 0x84, 0x57, 0x15, 0x47,
	0x02, 0xba, 0x0b, 0x95, 0xa9, 0xc3, 0xed, 0x20, 0xa4, 0x2e, 0x51, 0xc9, 0x57, 0x71, 0x79, 0xea,
	0xf0, 0x53, 0x29, 0x27, 0x9b, 0x17, 0xd4, 0xa3, 0x22, 0x4e, 0x5b, 0x6e, 0x3e, 0x93, 0x32, 0xda,
	0x87, 0x4a, 0x48, 0x5c, 0x1a, 0x50, 0xe2, 0x0b, 0x95, 0x70, 0x15, 0xa7, 0x0a, 0x19, 0xed, 0x17,
	0xe7, 0x62, 0x4e, 0x6a, 0xa5, 0x28, 0x9a, 0x12, 0x10, 0x82, 0xfc, 0xc4, 0x11, 0x4e, 0xad, 0xac,
	0x94, 0x6a, 0x8d, 0xa6, 0x70, 0x67, 0xc6, 0xb8, 0xb0, 0xd5, 0x7d, 0x6c, 0x59, 0x59, 0x54, 0x78,
	0xd2, 0x67, 0xa5, 0xa1, 0xb5, 0xf4, 0xce, 0xc1, 0xe6, 0xac, 0xbb, 0xbe, 0xa0, 0x4f, 0x55, 0xcd,
	0x99, 0x8c, 0x8b, 0x81, 0xb4, 0x3d, 0x5a, 0x9a, 0xe2, 0xdb, 0xb3, 0xcb, 0xca, 0x35, 0x82, 0x60,
	0x9d, 0xa0, 0x7f, 0x34, 0xb8, 0x13, 0x63, 0xdf, 0x27, 0x9c, 0x3b, 0x53, 0xf2, 0x4e, 0x28, 0x30,
	0x20, 0xe7, 0xf1, 0x69, 0x4c, 0x80, 0x5c, 0x6e, 0x4f, 0x3e, 0xff, 0x0e, 0x93, 0x2f, 0xac, 0x27,
	0xff, 0x19, 0xdc, 0x5a, 0xd6, 0x1d, 0x0f, 0x98, 0xcf, 0x89, 0xe4, 0x96, 0xd3, 0xa9, 0xef, 0x88,
	0x79, 0x48, 0x54, 0xea, 0x55, 0x9c, 0x2a, 0x9a, 0xaf, 0x8a, 0x50, 0x8f, 0x2d, 0x64, 0x41, 0x4f,
	0x5e, 0x83, 0x6c, 0x35, 0x94, 0xb6, 0x16, 0xea, 0x0a, 0x68, 0x9e, 0x43, 0x41, 0x36, 0x33, 0xaf,
	0xe5, 0x1a, 0xb9, 0x96, 0xde, 0x79, 0xbc, 0x15, 0xe8, 0x2d, 0x51, 0xdb, 0x23, 0x11, 0xce, 0xdd,
	0xa8, 0xb5, 0x23, 0x4f, 0xe8, 0x1e, 0x54, 0x83, 0x90, 0x7a, 0x4e, 0xb8, 0x88, 0xe6, 0x84, 0x84,
	0xb4, 0x82, 0xf5, 0x58, 0xa7, 0x5a, 0x71, 0x2b, 0xfc, 0x85, 0xff, 0x17, 0xfe, 0xfa, 0x5f, 0x1a,
	0x40, 0x9f, 0x78, 0x63, 0x12, 0xaa, 0xb8, 0x7d, 0xc8, 0xab, 0x2b, 0x45, 0x55, 0xf5, 0xc5, 0x8d,
	0x93, 0x3d, 0x76, 0x84, 0xa3, 0x52, 0x55, 0x6e, 0x64, 0x5b, 0x71, 0xfa, 0x1b, 0x51, 0x33, 0x74,
	0x07, 0xab, 0x35, 0xfa, 0x00, 0x74, 0xae, 0x20, 0xb1, 0x7d, 0xc7, 0x8b, 0x9a, 0xbe, 0x82, 0x21,
	0x52, 0x0d, 0x1c, 0x8f, 0xa0, 0x6f, 0x01, 0x9c, 0x30, 0x74, 0x56, 0xc0, 0x79, 0x1b, 0xd8, 0xd3,
	0xa4, 0x70, 0x45, 0xb9, 0x93, 0xcb, 0xba, 0x07, 0xc5, 0x68, 0x43, 0x5e, 0x4d, 0xc5, 0xd7, 0x54,
	0x7c, 0xb5, 0x46, 0xc3, 0x38, 0xfb, 0xec, 0x7f, 0x8f, 0xa9, 0x1c, 0xd5, 0x39, 0x40, 0x4a, 0xff,
	0xc6, 0x90, 0xcf, 0xa1, 0xe4, 0x29, 0x2b, 0xae, 0x0a, 0x4f, 0xef, 0x3c, 0x7a, 0xcb, 0xa8, 0x38,
	0xf1, 0xd3, 0x64, 0x50, 0x4e, 0x68, 0x90, 0x23, 0xfd, 0x6c, 0xf0, 0x74, 0x30, 0xfc, 0x66, 0x60,
	0x64, 0x50, 0x05, 0x0a, 0x87, 0x2f, 0xad, 0xde, 0xc8, 0xd0, 0xe4, 0x74, 0x3f, 0x3b, 0x19, 0x58,
	0x46, 0x16, 0x95, 0x20, 0x27, 0x17, 0x39, 0xa9, 0x3a, 0x1c, 0x0e, 0x9f, 0x19, 0xf9, 0xd5, 0x77,
	0xa0, 0x80, 0x00, 0x8a, 0x23, 0x0b, 0x9f, 0x0c, 0x9e, 0x18, 0x45, 0xe9, 0xa0, 0x8b, 0x71, 0xf7,
	0xa5, 0x51, 0x8a, 0xd5, 0x67, 0x47, 0x96, 0x51, 0x6e, 0xfe, 0xa1, 0xc1, 0x7e, 0xcf, 0x32, 0x57,
	0xef, 0xf6, 0xb5, 0x9c, 0xaa, 0xcb, 0xae, 0xfd, 0x01, 0xf4, 0x90, 0x31, 0x61, 0xb3, 0xf1, 0x4f,
	0xc4, 0x15, 0x71, 0x71, 0x7d, 0xb5, 0x35, 0xd1, 0xad, 0x8e, 0xda, 0x98, 0x31, 0x31, 0x54, 0x4e,
	0x30, 0x84, 0xcb, 0xb5, 0x04, 0x76, 0xa5, 0x75, 0xd5, 0xba, 0xd9, 0x01, 0x48, 0x4f, 0xaf, 0xe3,
	0x00, 0x50, 0x3c, 0x1e, 0xf6, 0xbb, 0x27, 0x03, 0x43, 0x93, 0x1b, 0xfd, 0xde, 0x68, 0xd4, 0x7d,
	0xd2, 0x33, 0xb2, 0xcd, 0x03, 0xb8, 0xbb, 0x39, 0x7c, 0x34, 0x3f, 0x96, 0x4f, 0x87, 0xb6, 0xf2,
	0x74, 0x34, 0x5f, 0xe5, 0x00, 0x7a, 0x96, 0x99, 0x1c, 0x7a, 0x04, 0xb9, 0x60, 0x3e, 0x56, 0x47,
	0xf4, 0xce, 0xfd, 0x6b, 0xbc, 0xfd, 0x66, 0x06, 0x4b, 0x0b, 0xf4, 0xa5, 0xec, 0x95, 0xa9, 0x1f,
	0x17, 0xdf, 0x87, 0x57, 0x96, 0x41, 0x6a, 0xaa, 0x6c, 0x90, 0x09, 0x65, 0xf9, 0xb5, 0x93, 0x21,
	0xae, 0x77, 0x3e, 0xbd, 0xd2, 0x7e, 0xbd, 0x82, 0xcc, 0x0c, 0x2e, 0x49, 0xf3, 0x3e, 0x9f, 0x22,
	0x02, 0x7b, 0xe9, 0x5f, 0x93, 0x9d, 0xce, 0xda, 0xa8, 0x0d, 0x1f, 0xbc, 0x69, 0xee, 0x8c, 0x12,
	0x83, 0xd4, 0xf5, 0xed, 0xd4, 0xdf, 0x72, 0x17, 0xbd, 0x80, 0x5d, 0x75, 0x61, 0xd9, 0x25, 0x13,
	0x75, 0xed, 0xc2, 0x55, 0x01, 0xb6, 0x57, 0xbf, 0x99, 0xc1, 0x55, 0xbe, 0xdc, 0xe2, 0x53, 0xf4,
	0x1d, 0xdc, 0x5a, 0x3a, 0xb5, 0x23, 0xba, 0x8a, 0xca, 0xf5, 0xc3, 0x9b, 0xd4, 0x5b, 0xe2, 0x7b,
	0x47, 0xc4, 0x7e, 0x95, 0xfe, 0xb0, 0x02, 0xa5, 0x30, 0xda, 0x6b, 0xfe, 0x99, 0x05, 0x5d, 0xd1,
	0x1e, 0xd7, 0xf8, 0xe7, 0xab, 0xbc, 0xdf, 0xdb, 0x1c, 0x4b, 0x91, 0x1e, 0x9d, 0x4f, 0x58, 0x7f,
	0xbc, 0xc6, 0xfa, 0x47, 0x6f, 0x60, 0x7d, 0x69, 0x1b, 0xd1, 0x2e, 0x60, 0xff, 0x35, 0xb2, 0x48,
	0xb8, 0xfa, 0x58, 0xe4, 0xae, 0x4f, 0x1a, 0x09, 0xd3, 0x47, 0xc1, 0xcc, 0xe0, 0xfa, 0x3a, 0x69,
	0xab, 0xbb, 0xe8, 0xfb, 0xcb, 0x08, 0x47, 0xd5, 0xd1, 0xb9, 0x79, 0x47, 0x5f, 0x86, 0x18, 0xa0,
	0x1c, 0xc6, 0x9b, 0x9f, 0x74, 0xa0, 0x14, 0xff, 0xc1, 0xc8, 0x31, 0xd5, 0xb3, 0x4c, 0x23, 0x83,
	0x76, 0x65, 0x5f, 0x07, 0x5c, 0x10, 0x5f, 0xca, 0x9a, 0x92, 0xa9, 0x7f, 0x4e, 0xc6, 0x0b, 0x29,
	0x67, 0xc7, 0x45, 0xf5, 0xa7, 0x7f, 0xf0, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xd4, 0x44,
	0x23, 0x2c, 0x0c, 0x00, 0x00,
}
