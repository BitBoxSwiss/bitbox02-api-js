// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eth.proto

package messages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ETHCoin int32

const (
	ETHCoin_ETH        ETHCoin = 0
	ETHCoin_RopstenETH ETHCoin = 1
	ETHCoin_RinkebyETH ETHCoin = 2
)

var ETHCoin_name = map[int32]string{
	0: "ETH",
	1: "RopstenETH",
	2: "RinkebyETH",
}

var ETHCoin_value = map[string]int32{
	"ETH":        0,
	"RopstenETH": 1,
	"RinkebyETH": 2,
}

func (x ETHCoin) String() string {
	return proto.EnumName(ETHCoin_name, int32(x))
}

func (ETHCoin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0}
}

type ETHPubRequest_OutputType int32

const (
	ETHPubRequest_ADDRESS ETHPubRequest_OutputType = 0
	ETHPubRequest_XPUB    ETHPubRequest_OutputType = 1
)

var ETHPubRequest_OutputType_name = map[int32]string{
	0: "ADDRESS",
	1: "XPUB",
}

var ETHPubRequest_OutputType_value = map[string]int32{
	"ADDRESS": 0,
	"XPUB":    1,
}

func (x ETHPubRequest_OutputType) String() string {
	return proto.EnumName(ETHPubRequest_OutputType_name, int32(x))
}

func (ETHPubRequest_OutputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0, 0}
}

type ETHPubRequest struct {
	Keypath              []uint32                 `protobuf:"varint,1,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Coin                 ETHCoin                  `protobuf:"varint,2,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	OutputType           ETHPubRequest_OutputType `protobuf:"varint,3,opt,name=output_type,json=outputType,proto3,enum=shiftcrypto.bitbox02.ETHPubRequest_OutputType" json:"output_type,omitempty"`
	Display              bool                     `protobuf:"varint,4,opt,name=display,proto3" json:"display,omitempty"`
	ContractAddress      []byte                   `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ETHPubRequest) Reset()         { *m = ETHPubRequest{} }
func (m *ETHPubRequest) String() string { return proto.CompactTextString(m) }
func (*ETHPubRequest) ProtoMessage()    {}
func (*ETHPubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{0}
}

func (m *ETHPubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHPubRequest.Unmarshal(m, b)
}
func (m *ETHPubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHPubRequest.Marshal(b, m, deterministic)
}
func (m *ETHPubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHPubRequest.Merge(m, src)
}
func (m *ETHPubRequest) XXX_Size() int {
	return xxx_messageInfo_ETHPubRequest.Size(m)
}
func (m *ETHPubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHPubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHPubRequest proto.InternalMessageInfo

func (m *ETHPubRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHPubRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHPubRequest) GetOutputType() ETHPubRequest_OutputType {
	if m != nil {
		return m.OutputType
	}
	return ETHPubRequest_ADDRESS
}

func (m *ETHPubRequest) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

func (m *ETHPubRequest) GetContractAddress() []byte {
	if m != nil {
		return m.ContractAddress
	}
	return nil
}

type ETHSignRequest struct {
	Coin                 ETHCoin  `protobuf:"varint,1,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	Keypath              []uint32 `protobuf:"varint,2,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Nonce                []byte   `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice             []byte   `protobuf:"bytes,4,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit             []byte   `protobuf:"bytes,5,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Recipient            []byte   `protobuf:"bytes,6,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Value                []byte   `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Data                 []byte   `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignRequest) Reset()         { *m = ETHSignRequest{} }
func (m *ETHSignRequest) String() string { return proto.CompactTextString(m) }
func (*ETHSignRequest) ProtoMessage()    {}
func (*ETHSignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{1}
}

func (m *ETHSignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignRequest.Unmarshal(m, b)
}
func (m *ETHSignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignRequest.Marshal(b, m, deterministic)
}
func (m *ETHSignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignRequest.Merge(m, src)
}
func (m *ETHSignRequest) XXX_Size() int {
	return xxx_messageInfo_ETHSignRequest.Size(m)
}
func (m *ETHSignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignRequest proto.InternalMessageInfo

func (m *ETHSignRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHSignRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHSignRequest) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ETHSignRequest) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *ETHSignRequest) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *ETHSignRequest) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *ETHSignRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ETHSignRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ETHSignMessageRequest struct {
	Coin                 ETHCoin  `protobuf:"varint,1,opt,name=coin,proto3,enum=shiftcrypto.bitbox02.ETHCoin" json:"coin,omitempty"`
	Keypath              []uint32 `protobuf:"varint,2,rep,packed,name=keypath,proto3" json:"keypath,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignMessageRequest) Reset()         { *m = ETHSignMessageRequest{} }
func (m *ETHSignMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ETHSignMessageRequest) ProtoMessage()    {}
func (*ETHSignMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{2}
}

func (m *ETHSignMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignMessageRequest.Unmarshal(m, b)
}
func (m *ETHSignMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignMessageRequest.Marshal(b, m, deterministic)
}
func (m *ETHSignMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignMessageRequest.Merge(m, src)
}
func (m *ETHSignMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ETHSignMessageRequest.Size(m)
}
func (m *ETHSignMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignMessageRequest proto.InternalMessageInfo

func (m *ETHSignMessageRequest) GetCoin() ETHCoin {
	if m != nil {
		return m.Coin
	}
	return ETHCoin_ETH
}

func (m *ETHSignMessageRequest) GetKeypath() []uint32 {
	if m != nil {
		return m.Keypath
	}
	return nil
}

func (m *ETHSignMessageRequest) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type ETHSignResponse struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHSignResponse) Reset()         { *m = ETHSignResponse{} }
func (m *ETHSignResponse) String() string { return proto.CompactTextString(m) }
func (*ETHSignResponse) ProtoMessage()    {}
func (*ETHSignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{3}
}

func (m *ETHSignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHSignResponse.Unmarshal(m, b)
}
func (m *ETHSignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHSignResponse.Marshal(b, m, deterministic)
}
func (m *ETHSignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHSignResponse.Merge(m, src)
}
func (m *ETHSignResponse) XXX_Size() int {
	return xxx_messageInfo_ETHSignResponse.Size(m)
}
func (m *ETHSignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHSignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ETHSignResponse proto.InternalMessageInfo

func (m *ETHSignResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ETHRequest struct {
	// Types that are valid to be assigned to Request:
	//	*ETHRequest_Pub
	//	*ETHRequest_Sign
	//	*ETHRequest_SignMsg
	Request              isETHRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ETHRequest) Reset()         { *m = ETHRequest{} }
func (m *ETHRequest) String() string { return proto.CompactTextString(m) }
func (*ETHRequest) ProtoMessage()    {}
func (*ETHRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{4}
}

func (m *ETHRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHRequest.Unmarshal(m, b)
}
func (m *ETHRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHRequest.Marshal(b, m, deterministic)
}
func (m *ETHRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHRequest.Merge(m, src)
}
func (m *ETHRequest) XXX_Size() int {
	return xxx_messageInfo_ETHRequest.Size(m)
}
func (m *ETHRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ETHRequest proto.InternalMessageInfo

type isETHRequest_Request interface {
	isETHRequest_Request()
}

type ETHRequest_Pub struct {
	Pub *ETHPubRequest `protobuf:"bytes,1,opt,name=pub,proto3,oneof"`
}

type ETHRequest_Sign struct {
	Sign *ETHSignRequest `protobuf:"bytes,2,opt,name=sign,proto3,oneof"`
}

type ETHRequest_SignMsg struct {
	SignMsg *ETHSignMessageRequest `protobuf:"bytes,3,opt,name=sign_msg,json=signMsg,proto3,oneof"`
}

func (*ETHRequest_Pub) isETHRequest_Request() {}

func (*ETHRequest_Sign) isETHRequest_Request() {}

func (*ETHRequest_SignMsg) isETHRequest_Request() {}

func (m *ETHRequest) GetRequest() isETHRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ETHRequest) GetPub() *ETHPubRequest {
	if x, ok := m.GetRequest().(*ETHRequest_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *ETHRequest) GetSign() *ETHSignRequest {
	if x, ok := m.GetRequest().(*ETHRequest_Sign); ok {
		return x.Sign
	}
	return nil
}

func (m *ETHRequest) GetSignMsg() *ETHSignMessageRequest {
	if x, ok := m.GetRequest().(*ETHRequest_SignMsg); ok {
		return x.SignMsg
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ETHRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ETHRequest_Pub)(nil),
		(*ETHRequest_Sign)(nil),
		(*ETHRequest_SignMsg)(nil),
	}
}

type ETHResponse struct {
	// Types that are valid to be assigned to Response:
	//	*ETHResponse_Pub
	//	*ETHResponse_Sign
	Response             isETHResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ETHResponse) Reset()         { *m = ETHResponse{} }
func (m *ETHResponse) String() string { return proto.CompactTextString(m) }
func (*ETHResponse) ProtoMessage()    {}
func (*ETHResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d980f775760351f6, []int{5}
}

func (m *ETHResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHResponse.Unmarshal(m, b)
}
func (m *ETHResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHResponse.Marshal(b, m, deterministic)
}
func (m *ETHResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHResponse.Merge(m, src)
}
func (m *ETHResponse) XXX_Size() int {
	return xxx_messageInfo_ETHResponse.Size(m)
}
func (m *ETHResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ETHResponse proto.InternalMessageInfo

type isETHResponse_Response interface {
	isETHResponse_Response()
}

type ETHResponse_Pub struct {
	Pub *PubResponse `protobuf:"bytes,1,opt,name=pub,proto3,oneof"`
}

type ETHResponse_Sign struct {
	Sign *ETHSignResponse `protobuf:"bytes,2,opt,name=sign,proto3,oneof"`
}

func (*ETHResponse_Pub) isETHResponse_Response() {}

func (*ETHResponse_Sign) isETHResponse_Response() {}

func (m *ETHResponse) GetResponse() isETHResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ETHResponse) GetPub() *PubResponse {
	if x, ok := m.GetResponse().(*ETHResponse_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *ETHResponse) GetSign() *ETHSignResponse {
	if x, ok := m.GetResponse().(*ETHResponse_Sign); ok {
		return x.Sign
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ETHResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ETHResponse_Pub)(nil),
		(*ETHResponse_Sign)(nil),
	}
}

func init() {
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHCoin", ETHCoin_name, ETHCoin_value)
	proto.RegisterEnum("shiftcrypto.bitbox02.ETHPubRequest_OutputType", ETHPubRequest_OutputType_name, ETHPubRequest_OutputType_value)
	proto.RegisterType((*ETHPubRequest)(nil), "shiftcrypto.bitbox02.ETHPubRequest")
	proto.RegisterType((*ETHSignRequest)(nil), "shiftcrypto.bitbox02.ETHSignRequest")
	proto.RegisterType((*ETHSignMessageRequest)(nil), "shiftcrypto.bitbox02.ETHSignMessageRequest")
	proto.RegisterType((*ETHSignResponse)(nil), "shiftcrypto.bitbox02.ETHSignResponse")
	proto.RegisterType((*ETHRequest)(nil), "shiftcrypto.bitbox02.ETHRequest")
	proto.RegisterType((*ETHResponse)(nil), "shiftcrypto.bitbox02.ETHResponse")
}

func init() { proto.RegisterFile("eth.proto", fileDescriptor_d980f775760351f6) }

var fileDescriptor_d980f775760351f6 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x9b, 0xb6, 0x5b, 0xd2, 0x37, 0xdd, 0x56, 0x59, 0x43, 0x8a, 0xf8, 0x23, 0x95, 0x0c,
	0xa4, 0x02, 0x52, 0x80, 0x20, 0x84, 0x04, 0xa7, 0x8d, 0x45, 0xca, 0x81, 0x69, 0x93, 0x17, 0x24,
	0x6e, 0x55, 0x92, 0x9a, 0xcc, 0xda, 0x6a, 0x9b, 0xd8, 0x99, 0xc8, 0x87, 0xe0, 0xcc, 0x37, 0xe3,
	0x9b, 0x70, 0x47, 0x76, 0x92, 0x75, 0x95, 0x36, 0xd8, 0x85, 0x53, 0xfd, 0xbc, 0x7e, 0x9f, 0xd7,
	0xfe, 0x3d, 0xb5, 0x02, 0x23, 0xa2, 0xce, 0x02, 0x51, 0x72, 0xc5, 0xd1, 0xae, 0x3c, 0xa3, 0x5f,
	0x55, 0x5e, 0xd6, 0x42, 0xf1, 0x20, 0xa3, 0x2a, 0xe3, 0xdf, 0x5f, 0x85, 0xf7, 0xc7, 0x39, 0x5f,
	0x2e, 0x39, 0x6b, 0x7a, 0xfc, 0x9f, 0x7d, 0xd8, 0x8a, 0x92, 0xf8, 0xa4, 0xca, 0x30, 0xf9, 0x56,
	0x11, 0xa9, 0x90, 0x07, 0xf6, 0x39, 0xa9, 0x45, 0xaa, 0xce, 0x3c, 0x6b, 0x3a, 0x98, 0x6d, 0xe1,
	0x4e, 0xa2, 0xd7, 0x30, 0xcc, 0x39, 0x65, 0x5e, 0x7f, 0x6a, 0xcd, 0xb6, 0xc3, 0x47, 0xc1, 0x4d,
	0xe3, 0x83, 0x28, 0x89, 0x3f, 0x72, 0xca, 0xb0, 0x69, 0x45, 0xc7, 0xe0, 0xf2, 0x4a, 0x89, 0x4a,
	0xcd, 0x55, 0x2d, 0x88, 0x37, 0x30, 0xce, 0xe0, 0x56, 0xe7, 0xea, 0x1a, 0xc1, 0xb1, 0xb1, 0x25,
	0xb5, 0x20, 0x18, 0xf8, 0xd5, 0x5a, 0xdf, 0x6e, 0x41, 0xa5, 0xb8, 0x48, 0x6b, 0x6f, 0x38, 0xb5,
	0x66, 0x0e, 0xee, 0x24, 0x7a, 0x06, 0x93, 0x9c, 0x33, 0x55, 0xa6, 0xb9, 0x9a, 0xa7, 0x8b, 0x45,
	0x49, 0xa4, 0xf4, 0x36, 0xa6, 0xd6, 0x6c, 0x8c, 0x77, 0xba, 0xfa, 0x7e, 0x53, 0xf6, 0xf7, 0x00,
	0x56, 0xe3, 0x91, 0x0b, 0xf6, 0xfe, 0xe1, 0x21, 0x8e, 0x4e, 0x4f, 0x27, 0x3d, 0xe4, 0xc0, 0xf0,
	0xcb, 0xc9, 0xe7, 0x83, 0x89, 0xe5, 0xff, 0xb6, 0x60, 0x3b, 0x4a, 0xe2, 0x53, 0x5a, 0xb0, 0x2e,
	0x9a, 0x2e, 0x00, 0xeb, 0xee, 0x01, 0x5c, 0x4b, 0xb3, 0xbf, 0x9e, 0xe6, 0x2e, 0x6c, 0x30, 0xce,
	0xf2, 0x26, 0x94, 0x31, 0x6e, 0x04, 0x7a, 0x00, 0xa3, 0x22, 0x95, 0x73, 0x51, 0xd2, 0x9c, 0x18,
	0xc2, 0x31, 0x76, 0x8a, 0x54, 0x9e, 0x68, 0xdd, 0x6d, 0x5e, 0xd0, 0x25, 0x55, 0x2d, 0x9b, 0xde,
	0xfc, 0xa4, 0x35, 0x7a, 0x08, 0xa3, 0x92, 0xe4, 0x54, 0x50, 0xc2, 0x94, 0xb7, 0x69, 0x36, 0x57,
	0x05, 0x7d, 0xda, 0x65, 0x7a, 0x51, 0x11, 0xcf, 0x6e, 0x4e, 0x33, 0x02, 0x21, 0x18, 0x2e, 0x52,
	0x95, 0x7a, 0x8e, 0x29, 0x9a, 0xb5, 0x7f, 0x09, 0xf7, 0x5a, 0xec, 0x23, 0x22, 0x65, 0x5a, 0x90,
	0xff, 0x42, 0x3f, 0x81, 0xc1, 0x52, 0x16, 0x2d, 0xbb, 0x5e, 0xfa, 0x2f, 0x61, 0xe7, 0x2a, 0x6e,
	0x29, 0x38, 0x93, 0x44, 0x23, 0x49, 0x5a, 0xb0, 0x54, 0x55, 0x25, 0x31, 0xc7, 0x8e, 0xf1, 0xaa,
	0xe0, 0xff, 0xb2, 0x00, 0xa2, 0x24, 0xee, 0xae, 0xf7, 0x0e, 0x06, 0xa2, 0xca, 0x4c, 0x9b, 0x1b,
	0xee, 0xdd, 0xe1, 0x89, 0xc5, 0x3d, 0xac, 0x1d, 0xe8, 0x3d, 0x0c, 0xf5, 0x50, 0xf3, 0xac, 0xdd,
	0xf0, 0xc9, 0xad, 0xce, 0x6b, 0x2f, 0x21, 0xee, 0x61, 0xe3, 0x41, 0x31, 0x38, 0xfa, 0x77, 0xde,
	0xb1, 0xb8, 0xe1, 0x8b, 0xbf, 0xfa, 0xd7, 0x23, 0x8d, 0x7b, 0xd8, 0xd6, 0xf6, 0x23, 0x59, 0x1c,
	0x8c, 0xc0, 0x2e, 0x9b, 0xaa, 0xff, 0xc3, 0x02, 0xd7, 0x80, 0xb5, 0x31, 0xbc, 0xbd, 0x4e, 0xf6,
	0xf8, 0xe6, 0xf9, 0x06, 0xab, 0xe9, 0xef, 0xb8, 0x3e, 0xac, 0x71, 0x3d, 0xfd, 0x07, 0xd7, 0x95,
	0xd7, 0x98, 0x0e, 0x00, 0x9c, 0xb2, 0xad, 0x3d, 0x0f, 0xc1, 0x6e, 0xff, 0x56, 0x64, 0xc3, 0x20,
	0x4a, 0xe2, 0x49, 0x0f, 0x6d, 0x03, 0x60, 0x2e, 0xa4, 0x22, 0x4c, 0x6b, 0xcb, 0x68, 0xca, 0xce,
	0x49, 0x56, 0x6b, 0xdd, 0xcf, 0x36, 0xcd, 0xe7, 0xe5, 0xcd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x83, 0x04, 0xf6, 0x8f, 0x04, 0x00, 0x00,
}
